import{_ as e}from"./chunks/ArticleMetadata.355516f3.js";import{_ as c,c as r,g as y,w as i,b as l,f as C,a as F,i as D,o as p,e as A,j as B}from"./app.4af0e587.js";const d="/assets/202010061322666.cc9bd814.jpeg",u="/assets/202010061322880.cacfed49.png",E="/assets/202010061323309.30a251ed.png",m="/assets/202010061325322.8059b36e.png",h="/assets/202010061320866.d0f77bff.jpeg",J=JSON.parse('{"title":"常用的运算符","description":"","frontmatter":{"title":"常用的运算符","author":"查尔斯","date":"2020/10/06 23:58","categories":["Java基础快速入门"],"tags":["Java","Java基础"]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"赋值运算符","slug":"赋值运算符","link":"#赋值运算符","children":[]},{"level":2,"title":"算术运算符","slug":"算术运算符","link":"#算术运算符","children":[{"level":3,"title":"四则运算","slug":"四则运算","link":"#四则运算","children":[]},{"level":3,"title":"自增和自减","slug":"自增和自减","link":"#自增和自减","children":[]},{"level":3,"title":"char类型的秘密","slug":"char类型的秘密","link":"#char类型的秘密","children":[]}]},{"level":2,"title":"复合赋值运算符","slug":"复合赋值运算符","link":"#复合赋值运算符","children":[]},{"level":2,"title":"关系运算符","slug":"关系运算符","link":"#关系运算符","children":[]},{"level":2,"title":"逻辑运算符","slug":"逻辑运算符","link":"#逻辑运算符","children":[{"level":3,"title":"神奇的短路功能","slug":"神奇的短路功能","link":"#神奇的短路功能","children":[]}]},{"level":2,"title":"三目运算符","slug":"三目运算符","link":"#三目运算符","children":[]},{"level":2,"title":"运算符优先级","slug":"运算符优先级","link":"#运算符优先级","children":[]},{"level":2,"title":"答题环节","slug":"答题环节","link":"#答题环节","children":[{"level":3,"title":"计算BMI","slug":"计算bmi","link":"#计算bmi","children":[]},{"level":3,"title":"BMI 判定","slug":"bmi-判定","link":"#bmi-判定","children":[]}]},{"level":2,"title":"参考文献","slug":"参考文献","link":"#参考文献","children":[]},{"level":2,"title":"后记","slug":"后记","link":"#后记","children":[]}],"relativePath":"courses/java/01-Java语法入门/06-常用的运算符.md","lastUpdated":1677831742000}'),f={name:"courses/java/01-Java语法入门/06-常用的运算符.md"},g=l("h1",{id:"常用的运算符",tabindex:"-1"},[C("常用的运算符 "),l("a",{class:"header-anchor",href:"#常用的运算符","aria-hidden":"true"},"#")],-1),b=F('<h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-hidden="true">#</a></h2><p><strong>C：</strong> 计算机，计算机，顾名思义就是用来进行数据计算的。那在计算机中运行的程序们，也是用于计算和处理数据的，每个编程语言都准备了很多常用的运算符来支撑我们的数据处理和计算。</p><p>而且我们有良好的数学打底的话，它们一点也不难。</p><p><img src="'+d+`" alt="202010061322666"></p><h2 id="赋值运算符" tabindex="-1">赋值运算符 <a class="header-anchor" href="#赋值运算符" aria-hidden="true">#</a></h2><p>首先要介绍的就是 <code>=</code> 号，上篇我们见过了，在 Java 中它不再表示相等，而是表示赋值的意思。前期每次遇到它你都要给自己刷刷被数学洗过的脑：&quot;它不是相等判断，它是赋值符号，即将等号右侧的内容赋值给左侧的变量&quot;。</p><p><strong>案例需求：学员王浩的Java成绩是80分，学员张萌的Java成绩与王浩的相同，输出张萌的成绩。</strong></p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Demo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 王浩成绩</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> wScore </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 张萌成绩</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> zScore</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 赋值：把等号右边的赋值给等号左边的</span></span>
<span class="line"><span style="color:#A6ACCD;">        zScore </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> wScore</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">张萌的成绩为：</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> zScore</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Demo</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">static</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">)</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 王浩成绩</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">wScore</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">80</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 张萌成绩</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">zScore</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 赋值：把等号右边的赋值给等号左边的</span></span>
<span class="line"><span style="color:#ABB2BF;">        zScore </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> wScore;</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;张萌的成绩为：&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> zScore);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">笔者说</p><p>几乎所有编程语言中，= 号都表示赋值，再或者又表示赋值又表示相等。</p></div><p>我们再来个案例感受下赋值符号。</p><details class="details custom-block"><summary>案例需求：将 num1 和 num2 实现值的交换。</summary><p><strong>思路：</strong> 下方的 num1 和 num2 的值要想交换一下，可以通过第3个变量作为中间媒介来进行。</p><div class="tip custom-block"><p class="custom-block-title">笔者说</p><p>当我们想让一瓶雪碧和一瓶可乐里的液体进行交换时，我们没办法直接将它们交换，需要用到一个空瓶子来做个中转。</p></div></details><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Demo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> num1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> num2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">9</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 此种转换方式不可行  类似于雪碧和可乐直接对嘴换 </span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// num1 = num2; num1结果为9</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// num2 = num1; num2结果为9</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 定义一个中间变量来实现交换</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> temp</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        temp </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> num1</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// temp为8</span></span>
<span class="line"><span style="color:#A6ACCD;">        num1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> num2</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// num1为9</span></span>
<span class="line"><span style="color:#A6ACCD;">        num2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> temp</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// num2为8</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Demo</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">static</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">)</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">num1</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">num2</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">9</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 此种转换方式不可行  类似于雪碧和可乐直接对嘴换 </span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// num1 = num2; num1结果为9</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// num2 = num1; num2结果为9</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 定义一个中间变量来实现交换</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">temp</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">        temp </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> num1; </span><span style="color:#7F848E;font-style:italic;">// temp为8</span></span>
<span class="line"><span style="color:#ABB2BF;">        num1 </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> num2; </span><span style="color:#7F848E;font-style:italic;">// num1为9</span></span>
<span class="line"><span style="color:#ABB2BF;">        num2 </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> temp; </span><span style="color:#7F848E;font-style:italic;">// num2为8</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="算术运算符" tabindex="-1">算术运算符 <a class="header-anchor" href="#算术运算符" aria-hidden="true">#</a></h2><p>除了赋值符号外，我们最不陌生的应该就是算术运算符了：</p><ul><li><code>+</code> 加法运算符</li><li><code>-</code> 减法运算符</li><li><code>* </code> 乘法运算符</li><li><code>/</code> 除法运算符</li><li><code>%</code> 求模运算符（求余数）</li><li><code>++</code> 自增运算符</li><li><code>--</code> 自减运算符</li></ul><h3 id="四则运算" tabindex="-1">四则运算 <a class="header-anchor" href="#四则运算" aria-hidden="true">#</a></h3><p>这些运算符，前五个都挺简单，看看下面的示例：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> num1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">11</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> num2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">num1 </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> num2</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 13</span></span>
<span class="line"><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">num1 </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> num2</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 9</span></span>
<span class="line"><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">num1 </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> num2</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 22</span></span>
<span class="line"><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">num1 </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> num2</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 5</span></span>
<span class="line"><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">num1 </span><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;"> num2</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> num1 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> num2 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(num1 </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> num2);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 13</span></span>
<span class="line"><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(num1 </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;"> num2);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 9</span></span>
<span class="line"><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(num1 </span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;"> num2);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 22</span></span>
<span class="line"><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(num1 </span><span style="color:#56B6C2;">/</span><span style="color:#ABB2BF;"> num2);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 5</span></span>
<span class="line"><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(num1 </span><span style="color:#56B6C2;">%</span><span style="color:#ABB2BF;"> num2);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 1</span></span>
<span class="line"></span></code></pre></div><details class="details custom-block"><summary>你肯定很好奇为什么 11 / 2 = 5 ？ 而不是等于 5.5 ？</summary><p>其实这就要涉及到数据类型的问题了，在 Java 中参与计算时，两个数参与计算会以其中取值范围大的类型为最终计算结果的类型。</p><p>因为上方是两个 int 类型变量，所以计算后的结果也是 int 类型。如果你执意想要更精确的结果，那么可以将输出语句这么改造： <code>num1 * 1.0 / num2</code> 。这样的话，其中一方已经变为了更大取值范围的类型，计算结果的类型也会与之变化为取值范围大的类型。</p></details><p><img src="`+u+`" alt="202010061322880"></p><h3 id="自增和自减" tabindex="-1">自增和自减 <a class="header-anchor" href="#自增和自减" aria-hidden="true">#</a></h3><p>但你可能对最后两个算术符号产生疑惑，<code>++</code> 和 <code>--</code> 到底是用来干嘛的？</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// ++ 和 --都分为前置形式和后置形式</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> num1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 下方示例，以 ++ 符号为例，++ 和 -- 同理。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 1.如果单独写成一条语句，前置 ++ 和后置 ++ 都是表示自增1</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 等价于 num1 = num1 + 1;（num1 = 10 + 1） 将num1的值+1然后再赋值给num1，这样num1的结果为11</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// num1 ++; </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ++ num1;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 2.但如果 ++ 被放在复杂情况使用时，前置和后置是有区别的</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// System.out.println(++ num1); // 11</span></span>
<span class="line"><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">num1 </span><span style="color:#89DDFF;">++);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 10</span></span>
<span class="line"><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">num1</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 11</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// ++ 和 --都分为前置形式和后置形式</span></span>
<span class="line"><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> num1 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 下方示例，以 ++ 符号为例，++ 和 -- 同理。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 1.如果单独写成一条语句，前置 ++ 和后置 ++ 都是表示自增1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 等价于 num1 = num1 + 1;（num1 = 10 + 1） 将num1的值+1然后再赋值给num1，这样num1的结果为11</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// num1 ++; </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// ++ num1;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 2.但如果 ++ 被放在复杂情况使用时，前置和后置是有区别的</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// System.out.println(++ num1); // 11</span></span>
<span class="line"><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(num1 ++);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 10</span></span>
<span class="line"><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(num1);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 11</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">笔者说</p><p>之所以出现此类结果，目前简单理解为前置++表示先自增然后再使用值，后置++表示先使用值再自增。</p><p>即：System.out.println(++ num1); 中，先是将num1进行了自增操作，变为了11，然后再进行了输出。</p><p>System.out.println(num1 ++); 中，先是使用num1进行了输出，结果是10，然后再对变量num1进行了自增操作，所以下方再打印输出num1，结果就成为了11。</p></div><p>我们再来看下方的代码，试着去读一读它们的含义，分析下结果是否和你预期的一致。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> num1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> num2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> num1 </span><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;"> num2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> b </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> num1 </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> num2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">num1 </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> num2 </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 5 % 2 = 1</span></span>
<span class="line"><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">num1 </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> num2 </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> b</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 5 / 2 = 2</span></span>
<span class="line"><span style="color:#A6ACCD;">num1 </span><span style="color:#89DDFF;">++;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">num2 </span><span style="color:#89DDFF;">--;</span></span>
<span class="line"><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">num1 = </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> num1</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// num1 = 6</span></span>
<span class="line"><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">num2 = </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> num2</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// num2 = 1</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> num1 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> num2 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> a </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> num1 </span><span style="color:#56B6C2;">%</span><span style="color:#E06C75;"> num2</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> b </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> num1 </span><span style="color:#56B6C2;">/</span><span style="color:#E06C75;"> num2</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(num1 </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;%&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> num2 </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;=&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> a);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 5 % 2 = 1</span></span>
<span class="line"><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(num1 </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;/&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> num2 </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;=&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> b);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 5 / 2 = 2</span></span>
<span class="line"><span style="color:#E06C75;">num1 </span><span style="color:#ABB2BF;">++;</span><span style="color:#E06C75;"> </span></span>
<span class="line"><span style="color:#E06C75;">num2 </span><span style="color:#ABB2BF;">--;</span></span>
<span class="line"><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;num1 = &quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> num1);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// num1 = 6</span></span>
<span class="line"><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;num2 = &quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> num2);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// num2 = 1</span></span>
<span class="line"></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">笔者说</p><p>学会阅读代码，真的很重要，你自己写的也好还是别人写的也罢，读不懂它们，就无法理清楚它想干什么，不要怕！尝试尝试！</p></div><h3 id="char类型的秘密" tabindex="-1">char类型的秘密 <a class="header-anchor" href="#char类型的秘密" aria-hidden="true">#</a></h3><p><strong>补充：++ 和 - - 与 char 类型相遇时的问题：</strong></p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 如果字符执行数值计算 那么它会自动转换为对应码表中数值然后执行计算</span></span>
<span class="line"><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> alp1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> alp2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">A</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">alp1 </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 98</span></span>
<span class="line"><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">alp2 </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 67</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 如果字符执行数值计算 那么它会自动转换为对应码表中数值然后执行计算</span></span>
<span class="line"><span style="color:#C678DD;">char</span><span style="color:#E06C75;"> alp1 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&#39;a&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">char</span><span style="color:#E06C75;"> alp2 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&#39;A&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(alp1 </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 98</span></span>
<span class="line"><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(alp2 </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 67</span></span>
<span class="line"></span></code></pre></div><p>char 类型是可以转换为 int 整数类型的，它的转换规则是按照 ASCII 、DBCS 这些码表来进行的。例如：小写的 a 是 97，大写的 A 是 65。</p><p><img src="`+E+`" alt="202010061323309"></p><div class="tip custom-block"><p class="custom-block-title">ASCII ((American Standard Code for Information Interchange)</p><p>美国信息交换标准代码）是基于拉丁字母的一套电脑编码系统，主要用于显示现代英语和其他西欧语言。它是最通用的信息交换标准，并等同于国际标准ISO/IEC 646。ASCII第一次以规范标准的类型发表是在1967年，最后一次更新则是在1986年，到目前为止共定义了128个字符。[1]</p><p>为了解决中国、日本和韩国的象形文字符和ASCII的某种兼容性，出现了双字节字符集（DBCS：double-byte character set）。DBCS从 第256 代码开始，就像ASCII一样，最初的128个代码是ASCII。然而，较高的128个代码中的某些总是跟随着第二个字节。这两个字节一起（称作首字节和跟随字节）定义一个字符，通常是一个复杂的象形文字。[2]</p></div><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 如果执行++或-- 则是先将char类型转换为整数类型，然后计算完之后再将其转换为char类型</span></span>
<span class="line"><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> alp1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">alp1 </span><span style="color:#89DDFF;">++;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// alp1 = alp1 + 1;</span></span>
<span class="line"><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">alp1</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// b</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 如果执行++或-- 则是先将char类型转换为整数类型，然后计算完之后再将其转换为char类型</span></span>
<span class="line"><span style="color:#C678DD;">char</span><span style="color:#E06C75;"> alp1 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&#39;a&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">alp1 </span><span style="color:#ABB2BF;">++;</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// alp1 = alp1 + 1;</span></span>
<span class="line"><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(alp1);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// b</span></span>
<span class="line"></span></code></pre></div><h2 id="复合赋值运算符" tabindex="-1">复合赋值运算符 <a class="header-anchor" href="#复合赋值运算符" aria-hidden="true">#</a></h2><p>在同时认识了赋值、算术两种运算符之后，笔者再带你认识 Java 中一种特别的运算符：复合赋值运算符，即整合了赋值运算符和算术运算符的特别玩法。</p><ul><li><code>+=</code></li><li><code>-=</code></li><li><code>*=</code></li><li><code>/=</code></li><li><code>%=</code></li></ul><p>虽然长的奇特，但是它们理解起来真的很容易，看看下方的示例：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> num1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">num1 </span><span style="color:#89DDFF;">-=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 等价于 num1 = num1 - 2;</span></span>
<span class="line"><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">num1</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 结果为8</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> num1 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">num1 </span><span style="color:#56B6C2;">-=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 等价于 num1 = num1 - 2;</span></span>
<span class="line"><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(num1);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 结果为8</span></span>
<span class="line"></span></code></pre></div><h2 id="关系运算符" tabindex="-1">关系运算符 <a class="header-anchor" href="#关系运算符" aria-hidden="true">#</a></h2><p>Java 中还有可以用来判断的关系运算符，以后我们应用还是很多的。</p><p>例如：当用户名长度小于5时，做一些错误提示等，这都是关系运算符要应用的场景。</p><p>关系运算符计算的结果是一个布尔类型（boolean）的值，要么是 true，要么是 false。</p><table><thead><tr><th style="text-align:center;">运算符</th><th style="text-align:center;">含义</th><th style="text-align:center;">示例</th><th style="text-align:center;">结果</th></tr></thead><tbody><tr><td style="text-align:center;">==</td><td style="text-align:center;">等于</td><td style="text-align:center;">5 == 6</td><td style="text-align:center;">false</td></tr><tr><td style="text-align:center;">!=</td><td style="text-align:center;">不等于</td><td style="text-align:center;">5 != 6</td><td style="text-align:center;">true</td></tr><tr><td style="text-align:center;">&gt;</td><td style="text-align:center;">大于</td><td style="text-align:center;">5 &gt; 6</td><td style="text-align:center;">false</td></tr><tr><td style="text-align:center;">&lt;</td><td style="text-align:center;">小于</td><td style="text-align:center;">5 &lt; 6</td><td style="text-align:center;">true</td></tr><tr><td style="text-align:center;">&gt;=</td><td style="text-align:center;">大于等于</td><td style="text-align:center;">5 &gt;= 6</td><td style="text-align:center;">false</td></tr><tr><td style="text-align:center;">&lt;=</td><td style="text-align:center;">小于等于</td><td style="text-align:center;">5 &lt;= 6</td><td style="text-align:center;">true</td></tr></tbody></table><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 下方代码用 () 括起来纯粹为了让 == 和 = 分开一些，更利于阅读</span></span>
<span class="line"><span style="color:#C792EA;">boolean</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 在Java中 不相等用!=表示</span></span>
<span class="line"><span style="color:#C792EA;">boolean</span><span style="color:#A6ACCD;"> result1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">result1</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 下方代码用 () 括起来纯粹为了让 == 和 = 分开一些，更利于阅读</span></span>
<span class="line"><span style="color:#C678DD;">boolean</span><span style="color:#E06C75;"> result </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> (</span><span style="color:#D19A66;">5</span><span style="color:#E06C75;"> </span><span style="color:#56B6C2;">==</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">2</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(result);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 在Java中 不相等用!=表示</span></span>
<span class="line"><span style="color:#C678DD;">boolean</span><span style="color:#E06C75;"> result1 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> (</span><span style="color:#D19A66;">5</span><span style="color:#E06C75;"> </span><span style="color:#56B6C2;">!=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">2</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(result1);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// true</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">笔者说</p><p>牢记的方法就是多在对应代码上写注释，= 号表示赋值运算符 == 表示相等关系。</p></div><h2 id="逻辑运算符" tabindex="-1">逻辑运算符 <a class="header-anchor" href="#逻辑运算符" aria-hidden="true">#</a></h2><p>生活中，有很多情况下不是一个关系运算符就可以做好判断的，例如：我想表示某个成绩范围 70 到 80，Java 中不可以用 <code>70 &lt; x &lt; 80</code>，这时候就需要用逻辑运算符了。</p><p>所谓逻辑运算符，就是我们生活中的 <strong>并且、或者</strong> 这些意思。<code>70 &lt; x &lt; 80</code> 代表的就是 x 大于 70，<strong>并且</strong> x 小于 80，可以用逻辑运算符写为<code>x &gt; 70 &amp;&amp; x &lt; 80</code>。</p><table><thead><tr><th style="text-align:center;">运算符</th><th style="text-align:center;">含义</th><th style="text-align:center;">运算规则</th></tr></thead><tbody><tr><td style="text-align:center;">&amp;&amp;</td><td style="text-align:center;"><strong>短路</strong> 与</td><td style="text-align:center;">两个操作数都是true，结果才是true</td></tr><tr><td style="text-align:center;">||</td><td style="text-align:center;"><strong>短路</strong> 或</td><td style="text-align:center;">两个操作数一个是true，结果就是true</td></tr><tr><td style="text-align:center;">!</td><td style="text-align:center;">非</td><td style="text-align:center;">操作数为true，结果为false；操作数为false，结果就为true</td></tr></tbody></table><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 短路与：&amp;&amp;  理解为并且   两个条件都为true，结果才能为true     true &amp;&amp; true == true;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 短路或：||  理解为或者   只要有一个条件为true，结果就为true   true || false == true;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 非：!  理解为取反     !true == false;   !false == true;</span></span>
<span class="line"><span style="color:#C792EA;">boolean</span><span style="color:#A6ACCD;"> flag1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#C792EA;">boolean</span><span style="color:#A6ACCD;"> flag2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#C792EA;">boolean</span><span style="color:#A6ACCD;"> flag3 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> flag1 </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> flag2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">boolean</span><span style="color:#A6ACCD;"> flag4 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> flag1 </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> flag2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">flag3</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">flag4</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 短路与：&amp;&amp;  理解为并且   两个条件都为true，结果才能为true     true &amp;&amp; true == true;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 短路或：||  理解为或者   只要有一个条件为true，结果就为true   true || false == true;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 非：!  理解为取反     !true == false;   !false == true;</span></span>
<span class="line"><span style="color:#C678DD;">boolean</span><span style="color:#E06C75;"> flag1 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> (</span><span style="color:#D19A66;">2</span><span style="color:#E06C75;"> </span><span style="color:#56B6C2;">==</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">3</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#C678DD;">boolean</span><span style="color:#E06C75;"> flag2 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> (</span><span style="color:#D19A66;">2</span><span style="color:#E06C75;"> </span><span style="color:#56B6C2;">==</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">2</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#C678DD;">boolean</span><span style="color:#E06C75;"> flag3 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> flag1 </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#E06C75;"> flag2</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">boolean</span><span style="color:#E06C75;"> flag4 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> flag1 </span><span style="color:#56B6C2;">||</span><span style="color:#E06C75;"> flag2</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(flag3);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(flag4);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// true</span></span>
<span class="line"></span></code></pre></div><h3 id="神奇的短路功能" tabindex="-1">神奇的短路功能 <a class="header-anchor" href="#神奇的短路功能" aria-hidden="true">#</a></h3><p>其实除了 <code>&amp;&amp;</code> 还有单个 <code>&amp;</code> 也可以表达一样的意思，<code>||</code> 还有 <code>|</code> 也可以表达一样的意思。</p><p>但是我们一般推荐使用 <code>&amp;&amp;</code> 或 <code>||</code> ，原因就是它们拥有 <strong>短路</strong> 功能。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// ======非短路情况======</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> num1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 无论第一个表达式是否成立，都会执行后面的表达式</span></span>
<span class="line"><span style="color:#C792EA;">boolean</span><span style="color:#A6ACCD;"> flag2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">false</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(++</span><span style="color:#A6ACCD;"> num1 </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">flag2</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ++ num1执行了，所以结果为8</span></span>
<span class="line"><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">num1</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 8</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// ======非短路情况======</span></span>
<span class="line"><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> num1 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 无论第一个表达式是否成立，都会执行后面的表达式</span></span>
<span class="line"><span style="color:#C678DD;">boolean</span><span style="color:#E06C75;"> flag2 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">false</span><span style="color:#E06C75;"> </span><span style="color:#56B6C2;">&amp;</span><span style="color:#E06C75;"> (</span><span style="color:#ABB2BF;">++</span><span style="color:#E06C75;"> num1 </span><span style="color:#56B6C2;">!=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">8</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(flag2);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// ++ num1执行了，所以结果为8</span></span>
<span class="line"><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(num1);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 8</span></span>
<span class="line"></span></code></pre></div><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// ======短路情况======</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> num1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 因为第一个表达式是false，它已经可以决定flag2的值就是false，所以&amp;&amp;后的表达式不会再执行，构成了短路</span></span>
<span class="line"><span style="color:#C792EA;">boolean</span><span style="color:#A6ACCD;"> flag2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">false</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(++</span><span style="color:#A6ACCD;"> num1 </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">flag2</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ++ num1没有执行，所以保留为原值</span></span>
<span class="line"><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">num1</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 7</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// ======短路情况======</span></span>
<span class="line"><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> num1 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 因为第一个表达式是false，它已经可以决定flag2的值就是false，所以&amp;&amp;后的表达式不会再执行，构成了短路</span></span>
<span class="line"><span style="color:#C678DD;">boolean</span><span style="color:#E06C75;"> flag2 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">false</span><span style="color:#E06C75;"> </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#E06C75;"> (</span><span style="color:#ABB2BF;">++</span><span style="color:#E06C75;"> num1 </span><span style="color:#56B6C2;">==</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">8</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> </span></span>
<span class="line"><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(flag2);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// ++ num1没有执行，所以保留为原值</span></span>
<span class="line"><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(num1);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 7</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">笔者说</p><p>毫无疑问，短路符号可以更加节省程序的执行效率。</p></div><h2 id="三目运算符" tabindex="-1">三目运算符 <a class="header-anchor" href="#三目运算符" aria-hidden="true">#</a></h2><p>在 Java 中还支持一种特殊的运算符，三目运算符，它又被称为三元运算符。</p><p><img src="`+m+`" alt="202010061325322"></p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 三目运算符(三元运算符)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 条件 ? 表达式1 : 表达式2</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 如果条件为true，则执行表达式1，否则执行表达式2</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> min </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">?</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">min</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 5</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> max </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">?</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">7</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">max</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 10</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 三目运算符(三元运算符)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 条件 ? 表达式1 : 表达式2</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 如果条件为true，则执行表达式1，否则执行表达式2</span></span>
<span class="line"><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> min </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> (</span><span style="color:#D19A66;">5</span><span style="color:#E06C75;"> </span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">7</span><span style="color:#E06C75;">) </span><span style="color:#C678DD;">?</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">5</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">:</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(min);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 5</span></span>
<span class="line"><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> max </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> (</span><span style="color:#D19A66;">10</span><span style="color:#E06C75;"> </span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">7</span><span style="color:#E06C75;">) </span><span style="color:#C678DD;">?</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">7</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">:</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(max);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 10</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">笔者说</p><p>后期用的还挺多的，用好了它可以有效优化一些代码结构，简化代码。</p></div><h2 id="运算符优先级" tabindex="-1">运算符优先级 <a class="header-anchor" href="#运算符优先级" aria-hidden="true">#</a></h2><p>至于运算符号的优先级，笔者则认为无需记忆，只要记住：想让谁先运行，就给其加小括号即可。而且其实从我们多年的数学习惯来看，加小括号也有利于阅读。</p><ul><li>单目运算符包括 <code>!</code> 、<code>++</code>、 <code>--</code>，优先级别高</li><li>优先级别最低的事赋值运算符</li><li>可以通过 <code>()</code> 控制表达式的运算顺序，<code>()</code> 优先级最高</li><li>从右向左结合性的只有赋值运算符、三目运算符和单目运算符</li><li>算术运算符 &gt; 关系运算符 &gt; 逻辑运算符</li></ul><h2 id="答题环节" tabindex="-1">答题环节 <a class="header-anchor" href="#答题环节" aria-hidden="true">#</a></h2><h3 id="计算bmi" tabindex="-1">计算BMI <a class="header-anchor" href="#计算bmi" aria-hidden="true">#</a></h3><details class="details custom-block"><summary>需求：使用 Scanner 收集身高体重，并计算出相应BMI值是多少？</summary><p>提示：BMI的计算公式是：体重(kg) / (身高 * 身高)</p><p>例如：小明的体重是 72 kg, 身高是1.69，那么小明的 BMI 就是：72 / (1.69 * 1.69)</p></details><h3 id="bmi-判定" tabindex="-1">BMI 判定 <a class="header-anchor" href="#bmi-判定" aria-hidden="true">#</a></h3><details class="details custom-block"><summary>需求：亚洲人的肥胖标准应该是 BMI 在18.5至24.9时为正常水平，根据计算的 BMI，告知使用者身体是否标准。</summary><p>标准：您当前的 BMI 符合正常水平！</p><p>不标准：您当前的 BMI 偏离正常水平！</p></details><h2 id="参考文献" tabindex="-1">参考文献 <a class="header-anchor" href="#参考文献" aria-hidden="true">#</a></h2><p>[1]莫绍强、陈善国. 计算机应用基础教程：中国铁道出版社，2012年：12-13</p><p>[2]钟小莉, 谢旻旻, 李永宁. 文字编码与Unicode编码研究[J]. 经营管理者, 2010(20):364-364.</p><h2 id="后记" tabindex="-1">后记 <a class="header-anchor" href="#后记" aria-hidden="true">#</a></h2><p>这些符号我们也算初步认识过了，你还 <strong>可</strong> 以吗？你的数学基础是否给予你了力量呢？计算机学习不仅要和英语打交道，数学更加重要，不过还好目前笔者更新的都是小白文，对数学基础要求不是太多。</p><p><img src="`+h+'" alt="202010061326166"></p><div class="info custom-block"><p class="custom-block-title">笔者说</p><p>对于技术的学习，笔者一贯遵循的步骤是：先用最最简单的 demo 让它跑起来，然后学学它的最最常用 API 和 配置让自己能用起来，最后熟练使用的基础上，在空闲时尝试阅读它的源码让自己能够洞彻它的运行机制，部分问题出现的原因，同时借鉴这些技术实现来提升自己的代码高度。</p><p>所以在笔者的文章中，前期基本都是小白文，仅仅穿插很少量的源码研究。当然等小白文更新多了，你们还依然喜欢，后期会不定时专门对部分技术的源码进行解析。</p></div>',77);function v(s,k,x,S,_,j){const o=e,t=D("ClientOnly");return p(),r("div",null,[g,y(t,null,{default:i(()=>{var n,a;return[(((n=s.$frontmatter)==null?void 0:n.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(p(),A(o,{key:0,article:s.$frontmatter},null,8,["article"])):B("",!0)]}),_:1}),b])}const M=c(f,[["render",v]]);export{J as __pageData,M as default};
