import{_ as t}from"./chunks/ArticleMetadata.355516f3.js";import{_ as c,c as r,g as y,w as C,b as l,f as B,a as A,i as F,o as p,e as D,j as i}from"./app.4af0e587.js";const d="/assets/202101241302860.0de8ba0e.jpg",E="/assets/202101241303960.21d6ae13.png",u="/assets/202101241303970.89f86e7e.gif",k=JSON.parse('{"title":"条件构造器","description":"","frontmatter":{"title":"条件构造器","author":"查尔斯","date":"2021/01/24 13:50","categories":["MyBatis-Plus快速入门"],"tags":["MyBatis Plus","MyBatis","ORM框架"]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"QueryWrapper","slug":"querywrapper","link":"#querywrapper","children":[{"level":3,"title":"指定查询的列","slug":"指定查询的列","link":"#指定查询的列","children":[]},{"level":3,"title":"where条件子句","slug":"where条件子句","link":"#where条件子句","children":[]},{"level":3,"title":"分组查询","slug":"分组查询","link":"#分组查询","children":[]},{"level":3,"title":"排序查询","slug":"排序查询","link":"#排序查询","children":[]},{"level":3,"title":"连接查询","slug":"连接查询","link":"#连接查询","children":[]}]},{"level":2,"title":"LambdaQueryWrapper","slug":"lambdaquerywrapper","link":"#lambdaquerywrapper","children":[]},{"level":2,"title":"allEq","slug":"alleq","link":"#alleq","children":[]},{"level":2,"title":"参考文献","slug":"参考文献","link":"#参考文献","children":[]},{"level":2,"title":"后记","slug":"后记","link":"#后记","children":[]}],"relativePath":"courses/mybatis/02-MyBatis-Plus基础/04-条件构造器.md","lastUpdated":1677831742000}'),m={name:"courses/mybatis/02-MyBatis-Plus基础/04-条件构造器.md"},g=l("h1",{id:"条件构造器",tabindex:"-1"},[B("条件构造器 "),l("a",{class:"header-anchor",href:"#条件构造器","aria-hidden":"true"},"#")],-1),h=A('<h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-hidden="true">#</a></h2><p><strong>C：</strong> 在前两篇 MP 的 CRUD API 演示中，笔者一直刻意忽略了一些带有条件构造器的 API，你说哪些是带有条件构造器的 API ？看下面。</p><ul><li><code>update(T entity, Wrapper&lt;T&gt; updateWrapper) : int</code></li><li><code>delete(Wrapper&lt;T&gt; queryWrapper) : int</code></li><li><code>selectOne(Wrapper&lt;T&gt; queryWrapper) : T</code></li><li><code>selectCount(Wrapper&lt;T&gt; queryWrapper) : Integer</code></li><li><code>selectList(Wrapper&lt;T&gt; queryWrapper) : List&lt;T&gt;</code></li><li><code>selectMaps(Wrapper&lt;T&gt; queryWrapper) : List&lt;Map&lt;String, Object&gt;&gt;</code></li><li><code>selectObjs(Wrapper&lt;T&gt; queryWrapper) : List&lt;Object&gt;</code></li><li><code>selectPage(E page, Wrapper&lt;T&gt; queryWrapper) : E</code></li><li><code>selectMapsPage(E page, Wrapper&lt;T&gt; queryWrapper) : E</code></li></ul><p>看到了吧？上述这些 API 中，都有一个显著的特点，即要求传递一个 Wrapper 类型的参数，而这个 Wrapper 类型就是笔者提到的条件构造器。</p><p>预热了两篇之久，本篇，笔者将带着你入门 MP 的条件构造器，看看传统的 SQL 语句条件如何用 条件构造器API 组装出来。</p><p><img src="'+d+'" alt="202101241302860"></p><h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-hidden="true">#</a></h2><p>Wrapper 类型，顾名思义就是一个包装类，但它又不是我们常说的 Integer 这种包装类概念，在 MP 中它是用于包装各种丰富的查询条件的包装类。</p><p>它是 MP 中条件包装类的顶级类，笔者在下方给你列出了它的类层次结构。当然，枝繁叶茂的它不可能就这几个子类，笔者只不过是挑重点的展示一下而已。</p><p><img src="'+E+'" alt="202101241303960."></p><p>但Wrapper 类是一个抽象类，所以我们不可能直接使用它，而是需要使用它的子类，那么哪些子类是我们常用的呢？一共有4个。</p><ul><li><p><code>QueryWrapper</code>：查询条件构造器</p></li><li><p><code>UpdateWrapper</code>：更新条件构造器</p></li><li><p><code>LambdaQueryWrapper</code>：使用 Lambda 语法的查询条件构造器</p></li><li><p><code>LambdaUpdateWrapper</code>：使用 Lambda 语法的更新条件构造器</p></li></ul><p>接下来笔者就以 <code>QueryWrapper</code> 和 <code>LambdaQueryWrapper</code> 为例，带着大家体验一下条件构造器。至于其他两个，使用方法没有太大差别，所以笔者不再单独讲解了。</p><p>我们还是先CV一个专用于条件构造器的单元测试类。</p><p><img src="'+u+`" alt="202101241303970"></p><h2 id="querywrapper" tabindex="-1">QueryWrapper <a class="header-anchor" href="#querywrapper" aria-hidden="true">#</a></h2><p>QueryWrapper 是 MP 中主要用于查询操作的条件包装类，我们将借助《快速入门》篇提到过的查询实体列表 API 来测试一下它。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 其他 API 略</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">BaseMapper</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">T</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Mapper</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">T</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     * 根据 entity 条件，查询全部记录</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     *</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     * </span><span style="color:#F78C6C;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">queryWrapper</span><span style="color:#676E95;font-style:italic;"> 实体对象封装操作类（可以为 null）</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     */</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">List</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">T</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">selectList</span><span style="color:#89DDFF;">(@</span><span style="color:#C792EA;">Param</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Constants</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">WRAPPER</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Wrapper</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">T</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">queryWrapper</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 其他 API 略</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">interface</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">BaseMapper</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">extends</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Mapper</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">    </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     * 根据 entity 条件，查询全部记录</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">queryWrapper</span><span style="color:#7F848E;font-style:italic;"> 实体对象封装操作类（可以为 null）</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     */</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#E5C07B;">List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#61AFEF;"> selectList</span><span style="color:#ABB2BF;">(@</span><span style="color:#E5C07B;">Param</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Constants</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">WRAPPER</span><span style="color:#ABB2BF;">) </span><span style="color:#E5C07B;">Wrapper</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;font-style:italic;">queryWrapper</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre></div><p>下方的基础 SQL 查询语法，大家应该都不陌生吧？</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">SELECT</span></span>
<span class="line"><span style="color:#A6ACCD;">  [ALL | DISTINCT] </span><span style="color:#676E95;font-style:italic;">-- 是否去重</span></span>
<span class="line"><span style="color:#A6ACCD;">  {</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> | table_name.</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> | [table_name.field1 [AS alias1] [, table_name.field2 [AS  alias2]][, ...]]} </span><span style="color:#676E95;font-style:italic;">-- 查询哪些列</span></span>
<span class="line"><span style="color:#F78C6C;">FROM</span></span>
<span class="line"><span style="color:#A6ACCD;">  table_name [AS table_ alias] [, ...] </span><span style="color:#676E95;font-style:italic;">-- 从哪些表查询</span></span>
<span class="line"><span style="color:#A6ACCD;">  [LEFT | RIGHT | INNER JOIN table_name2 [AS table_alias] </span><span style="color:#F78C6C;">ON</span><span style="color:#A6ACCD;"> 关联条件] </span><span style="color:#676E95;font-style:italic;">-- 连接查询</span></span>
<span class="line"><span style="color:#A6ACCD;">[WHERE ...] </span><span style="color:#676E95;font-style:italic;">-- 根据条件来完成上述表数据的筛选</span></span>
<span class="line"><span style="color:#A6ACCD;">[GROUP BY …] </span><span style="color:#676E95;font-style:italic;">-- 根据一个或多个列分组</span></span>
<span class="line"><span style="color:#A6ACCD;">[HAVING …]	</span><span style="color:#676E95;font-style:italic;">-- 分组查询后的筛选条件</span></span>
<span class="line"><span style="color:#A6ACCD;">[ORDER BY… ] </span><span style="color:#676E95;font-style:italic;">-- 根据一个或多个列排序</span></span>
<span class="line"><span style="color:#A6ACCD;">[LIMIT  {[offset,] row_count}]  </span><span style="color:#676E95;font-style:italic;">-- 限制查询结果数量和范围</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#C678DD;">SELECT</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">[ALL | DISTINCT]</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">-- 是否去重</span></span>
<span class="line"><span style="color:#ABB2BF;">  {* | table_name.* | </span><span style="color:#E06C75;">[table_name.field1 [AS alias1]</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">[, table_name.field2 [AS  alias2]</span><span style="color:#ABB2BF;">]</span><span style="color:#E06C75;">[, ...]</span><span style="color:#ABB2BF;">]} </span><span style="color:#7F848E;font-style:italic;">-- 查询哪些列</span></span>
<span class="line"><span style="color:#C678DD;">FROM</span></span>
<span class="line"><span style="color:#ABB2BF;">  table_name </span><span style="color:#E06C75;">[AS table_ alias]</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">[, ...]</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">-- 从哪些表查询</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">[LEFT | RIGHT | INNER JOIN table_name2 [AS table_alias]</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">ON</span><span style="color:#ABB2BF;"> 关联条件] </span><span style="color:#7F848E;font-style:italic;">-- 连接查询</span></span>
<span class="line"><span style="color:#E06C75;">[WHERE ...]</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">-- 根据条件来完成上述表数据的筛选</span></span>
<span class="line"><span style="color:#E06C75;">[GROUP BY …]</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">-- 根据一个或多个列分组</span></span>
<span class="line"><span style="color:#E06C75;">[HAVING …]</span><span style="color:#ABB2BF;">	</span><span style="color:#7F848E;font-style:italic;">-- 分组查询后的筛选条件</span></span>
<span class="line"><span style="color:#E06C75;">[ORDER BY… ]</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">-- 根据一个或多个列排序</span></span>
<span class="line"><span style="color:#E06C75;">[LIMIT  {[offset,]</span><span style="color:#ABB2BF;"> row_count}]  </span><span style="color:#7F848E;font-style:italic;">-- 限制查询结果数量和范围</span></span>
<span class="line"></span></code></pre></div><p>笔者就是要以 QueryWrapper ，带大家体验一下如何用条件构造器，来实现上述的基础 SQL 查询。</p><h3 id="指定查询的列" tabindex="-1">指定查询的列 <a class="header-anchor" href="#指定查询的列" aria-hidden="true">#</a></h3><p>在写查询类 SQL 时，我们都要先指定好要查询哪些列。在 MP 的查询条件构造器中，可以通过 <code>select()</code> 方法来实现查询列的指定。</p><ul><li><code>select(String... columns) : QueryWrapper&lt;T&gt;</code></li><li>...</li></ul><p><strong>测试代码：</strong></p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">SpringBootTest</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MybatisPlusWrapperTests</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Autowired</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">UserMapper</span><span style="color:#A6ACCD;"> userMapper</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 需求：查询用户的姓名和年龄信息</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Test</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">testSelectList1</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 创建查询条件构造器对象，通过泛型指定查询结果类型</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">QueryWrapper</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">User</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> queryWrapper </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">QueryWrapper</span><span style="color:#89DDFF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 指定查询 name、age 两列数据</span></span>
<span class="line"><span style="color:#A6ACCD;">        queryWrapper</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">select</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">age</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 执行用户列表查询</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">List</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">User</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> userList </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> userMapper</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">selectList</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">queryWrapper</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 遍历用户列表</span></span>
<span class="line"><span style="color:#A6ACCD;">        userList</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;font-style:italic;">::</span><span style="color:#A6ACCD;">println</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">SpringBootTest</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">MybatisPlusWrapperTests</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Autowired</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">private</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">UserMapper</span><span style="color:#E06C75;"> userMapper</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    </span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#7F848E;font-style:italic;">// 需求：查询用户的姓名和年龄信息</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> testSelectList1</span><span style="color:#ABB2BF;">()</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 创建查询条件构造器对象，通过泛型指定查询结果类型</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">QueryWrapper</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">User</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">queryWrapper</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">QueryWrapper</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 指定查询 name、age 两列数据</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">queryWrapper</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">select</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;name&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;age&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 执行用户列表查询</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">User</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">userList</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">userMapper</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">selectList</span><span style="color:#ABB2BF;">(queryWrapper);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 遍历用户列表</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">userList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#C678DD;">::</span><span style="color:#ABB2BF;">println);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre></div><p><strong>控制台输出：</strong></p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">==&gt;</span><span style="color:#A6ACCD;">  Preparing</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">SELECT</span><span style="color:#A6ACCD;"> name</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">age </span><span style="color:#C792EA;">FROM</span><span style="color:#A6ACCD;"> user </span><span style="color:#C792EA;">WHERE</span><span style="color:#A6ACCD;"> is_delete</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#89DDFF;">==&gt;</span><span style="color:#A6ACCD;"> Parameters</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">    Columns</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> name</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> age</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">        Row</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> Jone</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">18</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">        Row</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> Jack</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">        Row</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> Tom</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">28</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">        Row</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> Sandy</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">21</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">        Row</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> Billie</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">24</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">      Total</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#56B6C2;">==&gt;</span><span style="color:#E06C75;">  Preparing</span><span style="color:#C678DD;">:</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">SELECT</span><span style="color:#E06C75;"> name</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">age </span><span style="color:#E5C07B;">FROM</span><span style="color:#E06C75;"> user </span><span style="color:#E5C07B;">WHERE</span><span style="color:#E06C75;"> is_delete</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">0</span></span>
<span class="line"><span style="color:#56B6C2;">==&gt;</span><span style="color:#E06C75;"> Parameters</span><span style="color:#C678DD;">:</span><span style="color:#E06C75;"> </span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#E06C75;">    Columns</span><span style="color:#C678DD;">:</span><span style="color:#E06C75;"> name</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> age</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#E06C75;">        Row</span><span style="color:#C678DD;">:</span><span style="color:#E06C75;"> Jone</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">18</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#E06C75;">        Row</span><span style="color:#C678DD;">:</span><span style="color:#E06C75;"> Jack</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">20</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#E06C75;">        Row</span><span style="color:#C678DD;">:</span><span style="color:#E06C75;"> Tom</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">28</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#E06C75;">        Row</span><span style="color:#C678DD;">:</span><span style="color:#E06C75;"> Sandy</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">21</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#E06C75;">        Row</span><span style="color:#C678DD;">:</span><span style="color:#E06C75;"> Billie</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">24</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#E06C75;">      Total</span><span style="color:#C678DD;">:</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">5</span></span>
<span class="line"></span></code></pre></div><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">User(id=null, name=Jone, age=18, email=null, createTime=null, updateTime=null, isDelete=null)</span></span>
<span class="line"><span style="color:#A6ACCD;">User(id=null, name=Jack, age=20, email=null, createTime=null, updateTime=null, isDelete=null)</span></span>
<span class="line"><span style="color:#A6ACCD;">User(id=null, name=Tom, age=28, email=null, createTime=null, updateTime=null, isDelete=null)</span></span>
<span class="line"><span style="color:#A6ACCD;">User(id=null, name=Sandy, age=21, email=null, createTime=null, updateTime=null, isDelete=null)</span></span>
<span class="line"><span style="color:#A6ACCD;">User(id=null, name=Billie, age=24, email=null, createTime=null, updateTime=null, isDelete=null)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#abb2bf;">User(id=null, name=Jone, age=18, email=null, createTime=null, updateTime=null, isDelete=null)</span></span>
<span class="line"><span style="color:#abb2bf;">User(id=null, name=Jack, age=20, email=null, createTime=null, updateTime=null, isDelete=null)</span></span>
<span class="line"><span style="color:#abb2bf;">User(id=null, name=Tom, age=28, email=null, createTime=null, updateTime=null, isDelete=null)</span></span>
<span class="line"><span style="color:#abb2bf;">User(id=null, name=Sandy, age=21, email=null, createTime=null, updateTime=null, isDelete=null)</span></span>
<span class="line"><span style="color:#abb2bf;">User(id=null, name=Billie, age=24, email=null, createTime=null, updateTime=null, isDelete=null)</span></span>
<span class="line"><span style="color:#abb2bf;"></span></span></code></pre></div><p>而且，你还可以借助这个方法实现结果去重功能，只需要在第一个指定的列名前添加 <code>DISTINCT</code> 关键字即可。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 创建查询条件构造器对象，通过泛型指定查询结果类型</span></span>
<span class="line"><span style="color:#C792EA;">QueryWrapper</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">User</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> queryWrapper </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">QueryWrapper</span><span style="color:#89DDFF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 指定查询 name、age 两列数据,并去重结果</span></span>
<span class="line"><span style="color:#A6ACCD;">queryWrapper</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">select</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DISTINCT name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">age</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 创建查询条件构造器对象，通过泛型指定查询结果类型</span></span>
<span class="line"><span style="color:#E5C07B;">QueryWrapper</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">User</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> queryWrapper </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">QueryWrapper</span><span style="color:#ABB2BF;">&lt;&gt;</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 指定查询 name、age 两列数据,并去重结果</span></span>
<span class="line"><span style="color:#E5C07B;">queryWrapper</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">select</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;DISTINCT name&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;age&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre></div><p>最终执行的 SQL 就变成了这样：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">SELECT DISTINCT</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;">,age </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> user </span><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> is_delete</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#C678DD;">SELECT DISTINCT</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">name</span><span style="color:#ABB2BF;">,age </span><span style="color:#C678DD;">FROM</span><span style="color:#ABB2BF;"> user </span><span style="color:#C678DD;">WHERE</span><span style="color:#ABB2BF;"> is_delete</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">0</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">笔者说</p><p>聪明如你，一定能举一反三，如果未来需要给查询列起别名、或者使用一些聚合函数，直接在 select() 方法中写就可以。</p></div><h3 id="where条件子句" tabindex="-1">where条件子句 <a class="header-anchor" href="#where条件子句" aria-hidden="true">#</a></h3><p>查询类 SQL 中，在指定了查询哪些列之后，另一个非常重要的就是指定筛选结果数据的条件。</p><p>where 条件子句就是 <strong>用于检索数据表中符合条件记录</strong> 的，<strong>条件子句可以由一个或多个逻辑表达式组成，结果一般为真或假。</strong></p><h4 id="关系运算符" tabindex="-1">关系运算符 <a class="header-anchor" href="#关系运算符" aria-hidden="true">#</a></h4><p>下方是 where 条件子句中常用关系运算 和 MP 中对应方法的对照表。</p><table><thead><tr><th><strong>SQL 运算符</strong></th><th style="text-align:left;"><strong>含义</strong></th><th><strong>MP 对应方法</strong></th><th>笔者帮你强化理解</th></tr></thead><tbody><tr><td>=</td><td style="text-align:left;">等于</td><td>eq(R column, Object val) : Children</td><td>eq：equal</td></tr><tr><td>&lt;&gt; 或 !=</td><td style="text-align:left;">不等于</td><td>ne(R column, Object val) : Children</td><td>ne：not equal</td></tr><tr><td>&gt;</td><td style="text-align:left;">大于</td><td>gt(R column, Object val) : Children</td><td>gt：greater than</td></tr><tr><td>&lt;</td><td style="text-align:left;">小于</td><td>lt(R column, Object val) : Children</td><td>lt：less than</td></tr><tr><td>&gt;=</td><td style="text-align:left;">大于等于</td><td>ge(R column, Object val) : Children</td><td>ge：greater than or equal</td></tr><tr><td>&lt;=</td><td style="text-align:left;">小于等于</td><td>le(R column, Object val) : Children</td><td>le：less than or equal</td></tr><tr><td>is null</td><td style="text-align:left;">等于null</td><td>isNull(R column) : Children</td><td></td></tr><tr><td>is not null</td><td style="text-align:left;">不等于null</td><td>isNotNull(R column) : Children</td><td></td></tr></tbody></table><p><strong>测试代码：</strong></p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">SpringBootTest</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MybatisPlusWrapperTests</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Autowired</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">UserMapper</span><span style="color:#A6ACCD;"> userMapper</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 需求：查询年龄 &gt;= 21 的用户数据</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Test</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">testSelectList2</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 创建查询条件构造器对象，通过泛型指定查询结果类型</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">QueryWrapper</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">User</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> queryWrapper </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">QueryWrapper</span><span style="color:#89DDFF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// ge：greater equals 大于等于</span></span>
<span class="line"><span style="color:#A6ACCD;">        queryWrapper</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ge</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">age</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">21</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 执行用户列表查询</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">List</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">User</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> userList </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> userMapper</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">selectList</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">queryWrapper</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 遍历用户列表</span></span>
<span class="line"><span style="color:#A6ACCD;">        userList</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;font-style:italic;">::</span><span style="color:#A6ACCD;">println</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">SpringBootTest</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">MybatisPlusWrapperTests</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Autowired</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">private</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">UserMapper</span><span style="color:#E06C75;"> userMapper</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#7F848E;font-style:italic;">// 需求：查询年龄 &gt;= 21 的用户数据</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> testSelectList2</span><span style="color:#ABB2BF;">()</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 创建查询条件构造器对象，通过泛型指定查询结果类型</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">QueryWrapper</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">User</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">queryWrapper</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">QueryWrapper</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// ge：greater equals 大于等于</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">queryWrapper</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">ge</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;age&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">21</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 执行用户列表查询</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">User</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">userList</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">userMapper</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">selectList</span><span style="color:#ABB2BF;">(queryWrapper);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 遍历用户列表</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">userList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#C678DD;">::</span><span style="color:#ABB2BF;">println);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre></div><p><strong>控制台输出：</strong></p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">==&gt;</span><span style="color:#A6ACCD;">  Preparing: </span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> id,</span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;">,age,email,create_time,update_time,is_delete </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> user </span><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> is_delete</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">AND</span><span style="color:#A6ACCD;"> (age </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#A6ACCD;"> ?)</span></span>
<span class="line"><span style="color:#89DDFF;">==&gt;</span><span style="color:#A6ACCD;"> Parameters: </span><span style="color:#F78C6C;">21</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">Integer</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">    Columns: id, </span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;">, age, email, create_time, update_time, is_delete</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">Row</span><span style="color:#A6ACCD;">: </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">, Tom, </span><span style="color:#F78C6C;">28</span><span style="color:#A6ACCD;">, Tom@126.com, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">Row</span><span style="color:#A6ACCD;">: </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">, Sandy, </span><span style="color:#F78C6C;">21</span><span style="color:#A6ACCD;">, Sandy@126.com, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">Row</span><span style="color:#A6ACCD;">: </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">, Billie, </span><span style="color:#F78C6C;">24</span><span style="color:#A6ACCD;">, Billie@126.com, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">      Total: </span><span style="color:#F78C6C;">3</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#56B6C2;">==&gt;</span><span style="color:#ABB2BF;">  Preparing: </span><span style="color:#C678DD;">SELECT</span><span style="color:#ABB2BF;"> id,</span><span style="color:#C678DD;">name</span><span style="color:#ABB2BF;">,age,email,create_time,update_time,is_delete </span><span style="color:#C678DD;">FROM</span><span style="color:#ABB2BF;"> user </span><span style="color:#C678DD;">WHERE</span><span style="color:#ABB2BF;"> is_delete</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">AND</span><span style="color:#ABB2BF;"> (age </span><span style="color:#56B6C2;">&gt;=</span><span style="color:#ABB2BF;"> ?)</span></span>
<span class="line"><span style="color:#56B6C2;">==&gt;</span><span style="color:#ABB2BF;"> Parameters: </span><span style="color:#D19A66;">21</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">Integer</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#ABB2BF;">    Columns: id, </span><span style="color:#C678DD;">name</span><span style="color:#ABB2BF;">, age, email, create_time, update_time, is_delete</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">Row</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">, Tom, </span><span style="color:#D19A66;">28</span><span style="color:#ABB2BF;">, Tom</span><span style="color:#E06C75;">@126</span><span style="color:#ABB2BF;">.com, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">Row</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">, Sandy, </span><span style="color:#D19A66;">21</span><span style="color:#ABB2BF;">, Sandy</span><span style="color:#E06C75;">@126</span><span style="color:#ABB2BF;">.com, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">Row</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">, Billie, </span><span style="color:#D19A66;">24</span><span style="color:#ABB2BF;">, Billie</span><span style="color:#E06C75;">@126</span><span style="color:#ABB2BF;">.com, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#ABB2BF;">      Total: </span><span style="color:#D19A66;">3</span></span>
<span class="line"></span></code></pre></div><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">User(id=3, name=Tom, age=28, email=Tom@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#A6ACCD;">User(id=4, name=Sandy, age=21, email=Sandy@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#A6ACCD;">User(id=5, name=Billie, age=24, email=Billie@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#abb2bf;">User(id=3, name=Tom, age=28, email=Tom@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#abb2bf;">User(id=4, name=Sandy, age=21, email=Sandy@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#abb2bf;">User(id=5, name=Billie, age=24, email=Billie@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#abb2bf;"></span></span></code></pre></div><p>其他的笔者就不再测试了，你可以自己挨个试试。</p><h4 id="逻辑运算符" tabindex="-1">逻辑运算符 <a class="header-anchor" href="#逻辑运算符" aria-hidden="true">#</a></h4><h5 id="普通逻辑" tabindex="-1">普通逻辑 <a class="header-anchor" href="#普通逻辑" aria-hidden="true">#</a></h5><table><thead><tr><th><strong>SQL 运算符</strong></th><th style="text-align:left;"><strong>含义</strong></th><th><strong>MP 对应方法</strong></th></tr></thead><tbody><tr><td><strong>AND</strong></td><td style="text-align:left;">逻辑与，同时为真，结果才为真</td><td>默认使用 and 作为多个条件之间的关系表示</td></tr><tr><td></td><td style="text-align:left;">嵌套 and</td><td>and(Consumer&lt;Param&gt; consumer) : Children</td></tr><tr><td><strong>OR</strong></td><td style="text-align:left;">逻辑或，只要一个为真，则结果为真</td><td>or() : Children</td></tr><tr><td></td><td style="text-align:left;">嵌套 or</td><td>or(Consumer&lt;Param&gt; consumer) : Children</td></tr><tr><td><strong>NOT</strong></td><td style="text-align:left;">逻辑非，若操作数为假，结果则为真</td><td>not(Consumer&lt;Param&gt; consumer) : Children</td></tr></tbody></table><p><strong>测试代码：</strong></p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">SpringBootTest</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MybatisPlusWrapperTests</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Autowired</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">UserMapper</span><span style="color:#A6ACCD;"> userMapper</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 需求：查询年龄 &gt;= 21 并且姓名为Tom的用户数据</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Test</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">testSelectList3</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 创建查询条件构造器对象，通过泛型指定查询结果类型</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">QueryWrapper</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">User</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> queryWrapper </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">QueryWrapper</span><span style="color:#89DDFF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 可以分开设置</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// queryWrapper.ge(&quot;age&quot;, 21);</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// queryWrapper.eq(&quot;name&quot;, &quot;Tom&quot;);</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 也可以链式操作</span></span>
<span class="line"><span style="color:#A6ACCD;">        queryWrapper</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ge</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">age</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">21</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">eq</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Tom</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 执行用户列表查询</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">List</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">User</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> userList </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> userMapper</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">selectList</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">queryWrapper</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 遍历用户列表</span></span>
<span class="line"><span style="color:#A6ACCD;">        userList</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;font-style:italic;">::</span><span style="color:#A6ACCD;">println</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">SpringBootTest</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">MybatisPlusWrapperTests</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Autowired</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">private</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">UserMapper</span><span style="color:#E06C75;"> userMapper</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#7F848E;font-style:italic;">// 需求：查询年龄 &gt;= 21 并且姓名为Tom的用户数据</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> testSelectList3</span><span style="color:#ABB2BF;">()</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 创建查询条件构造器对象，通过泛型指定查询结果类型</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">QueryWrapper</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">User</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">queryWrapper</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">QueryWrapper</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 可以分开设置</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// queryWrapper.ge(&quot;age&quot;, 21);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// queryWrapper.eq(&quot;name&quot;, &quot;Tom&quot;);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 也可以链式操作</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">queryWrapper</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">ge</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;age&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">21</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                    .</span><span style="color:#61AFEF;">eq</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;name&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;Tom&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 执行用户列表查询</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">User</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">userList</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">userMapper</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">selectList</span><span style="color:#ABB2BF;">(queryWrapper);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 遍历用户列表</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">userList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#C678DD;">::</span><span style="color:#ABB2BF;">println);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre></div><p><strong>控制台输出：</strong></p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">==&gt;</span><span style="color:#A6ACCD;">  Preparing: </span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> id,</span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;">,age,email,create_time,update_time,is_delete </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> user </span><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> is_delete</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">AND</span><span style="color:#A6ACCD;"> (age </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#A6ACCD;"> ? </span><span style="color:#F78C6C;">AND</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ?)</span></span>
<span class="line"><span style="color:#89DDFF;">==&gt;</span><span style="color:#A6ACCD;"> Parameters: </span><span style="color:#F78C6C;">21</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">Integer</span><span style="color:#A6ACCD;">), Tom(String)</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">    Columns: id, </span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;">, age, email, create_time, update_time, is_delete</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">Row</span><span style="color:#A6ACCD;">: </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">, Tom, </span><span style="color:#F78C6C;">28</span><span style="color:#A6ACCD;">, Tom@126.com, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">      Total: </span><span style="color:#F78C6C;">1</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#56B6C2;">==&gt;</span><span style="color:#ABB2BF;">  Preparing: </span><span style="color:#C678DD;">SELECT</span><span style="color:#ABB2BF;"> id,</span><span style="color:#C678DD;">name</span><span style="color:#ABB2BF;">,age,email,create_time,update_time,is_delete </span><span style="color:#C678DD;">FROM</span><span style="color:#ABB2BF;"> user </span><span style="color:#C678DD;">WHERE</span><span style="color:#ABB2BF;"> is_delete</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">AND</span><span style="color:#ABB2BF;"> (age </span><span style="color:#56B6C2;">&gt;=</span><span style="color:#ABB2BF;"> ? </span><span style="color:#C678DD;">AND</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">name</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> ?)</span></span>
<span class="line"><span style="color:#56B6C2;">==&gt;</span><span style="color:#ABB2BF;"> Parameters: </span><span style="color:#D19A66;">21</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">Integer</span><span style="color:#ABB2BF;">), Tom(String)</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#ABB2BF;">    Columns: id, </span><span style="color:#C678DD;">name</span><span style="color:#ABB2BF;">, age, email, create_time, update_time, is_delete</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">Row</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">, Tom, </span><span style="color:#D19A66;">28</span><span style="color:#ABB2BF;">, Tom</span><span style="color:#E06C75;">@126</span><span style="color:#ABB2BF;">.com, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#ABB2BF;">      Total: </span><span style="color:#D19A66;">1</span></span>
<span class="line"></span></code></pre></div><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">User(id=3, name=Tom, age=28, email=Tom@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#abb2bf;">User(id=3, name=Tom, age=28, email=Tom@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#abb2bf;"></span></span></code></pre></div><p>当你编写了多个条件表达式的时候，MP 默认认为它们之间采用 <code>and</code> 关系。但如果你想实现 <code>or</code> 关系的需求，那就必须得使用 <code>or()</code> 方法了。</p><p><strong>测试代码：</strong></p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">SpringBootTest</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MybatisPlusWrapperTests</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Autowired</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">UserMapper</span><span style="color:#A6ACCD;"> userMapper</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 需求：查询年龄 = 18 或者 年龄 = 24 的用户数据</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Test</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">testSelectList4</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 创建查询条件构造器对象，通过泛型指定查询结果类型</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">QueryWrapper</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">User</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> queryWrapper </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">QueryWrapper</span><span style="color:#89DDFF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 或者关系</span></span>
<span class="line"><span style="color:#A6ACCD;">        queryWrapper</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">eq</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">age</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">18</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">or</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">eq</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">age</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">24</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 执行用户列表查询</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">List</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">User</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> userList </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> userMapper</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">selectList</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">queryWrapper</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 遍历用户列表</span></span>
<span class="line"><span style="color:#A6ACCD;">        userList</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;font-style:italic;">::</span><span style="color:#A6ACCD;">println</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">SpringBootTest</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">MybatisPlusWrapperTests</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Autowired</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">private</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">UserMapper</span><span style="color:#E06C75;"> userMapper</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#7F848E;font-style:italic;">// 需求：查询年龄 = 18 或者 年龄 = 24 的用户数据</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> testSelectList4</span><span style="color:#ABB2BF;">()</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 创建查询条件构造器对象，通过泛型指定查询结果类型</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">QueryWrapper</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">User</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">queryWrapper</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">QueryWrapper</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 或者关系</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">queryWrapper</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">eq</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;age&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">18</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                    .</span><span style="color:#61AFEF;">or</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">                    .</span><span style="color:#61AFEF;">eq</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;age&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">24</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 执行用户列表查询</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">User</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">userList</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">userMapper</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">selectList</span><span style="color:#ABB2BF;">(queryWrapper);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 遍历用户列表</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">userList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#C678DD;">::</span><span style="color:#ABB2BF;">println);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#E06C75;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre></div><p><strong>控制台输出：</strong></p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">==&gt;</span><span style="color:#A6ACCD;">  Preparing: </span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> id,</span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;">,age,email,create_time,update_time,is_delete </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> user </span><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> is_delete</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">AND</span><span style="color:#A6ACCD;"> (age </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ? </span><span style="color:#F78C6C;">OR</span><span style="color:#A6ACCD;"> age </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ?)</span></span>
<span class="line"><span style="color:#89DDFF;">==&gt;</span><span style="color:#A6ACCD;"> Parameters: </span><span style="color:#F78C6C;">18</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">Integer</span><span style="color:#A6ACCD;">), </span><span style="color:#F78C6C;">24</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">Integer</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">    Columns: id, </span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;">, age, email, create_time, update_time, is_delete</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">Row</span><span style="color:#A6ACCD;">: </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">, Jone, </span><span style="color:#F78C6C;">18</span><span style="color:#A6ACCD;">, Jone@126.com, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">Row</span><span style="color:#A6ACCD;">: </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">, Billie, </span><span style="color:#F78C6C;">24</span><span style="color:#A6ACCD;">, Billie@126.com, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">      Total: </span><span style="color:#F78C6C;">2</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#56B6C2;">==&gt;</span><span style="color:#ABB2BF;">  Preparing: </span><span style="color:#C678DD;">SELECT</span><span style="color:#ABB2BF;"> id,</span><span style="color:#C678DD;">name</span><span style="color:#ABB2BF;">,age,email,create_time,update_time,is_delete </span><span style="color:#C678DD;">FROM</span><span style="color:#ABB2BF;"> user </span><span style="color:#C678DD;">WHERE</span><span style="color:#ABB2BF;"> is_delete</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">AND</span><span style="color:#ABB2BF;"> (age </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> ? </span><span style="color:#C678DD;">OR</span><span style="color:#ABB2BF;"> age </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> ?)</span></span>
<span class="line"><span style="color:#56B6C2;">==&gt;</span><span style="color:#ABB2BF;"> Parameters: </span><span style="color:#D19A66;">18</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">Integer</span><span style="color:#ABB2BF;">), </span><span style="color:#D19A66;">24</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">Integer</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#ABB2BF;">    Columns: id, </span><span style="color:#C678DD;">name</span><span style="color:#ABB2BF;">, age, email, create_time, update_time, is_delete</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">Row</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, Jone, </span><span style="color:#D19A66;">18</span><span style="color:#ABB2BF;">, Jone</span><span style="color:#E06C75;">@126</span><span style="color:#ABB2BF;">.com, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">Row</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">, Billie, </span><span style="color:#D19A66;">24</span><span style="color:#ABB2BF;">, Billie</span><span style="color:#E06C75;">@126</span><span style="color:#ABB2BF;">.com, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#ABB2BF;">      Total: </span><span style="color:#D19A66;">2</span></span>
<span class="line"></span></code></pre></div><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">User(id=1, name=Jone, age=18, email=Jone@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#A6ACCD;">User(id=5, name=Billie, age=24, email=Billie@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#abb2bf;">User(id=1, name=Jone, age=18, email=Jone@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#abb2bf;">User(id=5, name=Billie, age=24, email=Billie@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#abb2bf;"></span></span></code></pre></div><h5 id="嵌套逻辑" tabindex="-1">嵌套逻辑 <a class="header-anchor" href="#嵌套逻辑" aria-hidden="true">#</a></h5><p>我们看到上方的对照表中，还有一种是用于嵌套 or 或 嵌套 and 关系的方法，有些同学可能有点懵，看看下面这行代码是不是就明白了呢？</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">select</span><span style="color:#A6ACCD;"> xx </span><span style="color:#F78C6C;">from</span><span style="color:#A6ACCD;"> xx </span><span style="color:#F78C6C;">where</span><span style="color:#A6ACCD;"> xx </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> xx </span><span style="color:#F78C6C;">or</span><span style="color:#A6ACCD;"> (xx </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> xx </span><span style="color:#F78C6C;">and</span><span style="color:#A6ACCD;"> xx </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> xx)</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> xx </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> xx </span><span style="color:#C678DD;">where</span><span style="color:#ABB2BF;"> xx </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> xx </span><span style="color:#C678DD;">or</span><span style="color:#ABB2BF;"> (xx </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> xx </span><span style="color:#C678DD;">and</span><span style="color:#ABB2BF;"> xx </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> xx)</span></span>
<span class="line"></span></code></pre></div><p><strong>测试代码：</strong></p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">SpringBootTest</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MybatisPlusWrapperTests</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Autowired</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">UserMapper</span><span style="color:#A6ACCD;"> userMapper</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 需求：查询姓名中带有o字母 或者 (年龄 = 21 并且 姓名以S字母开头) 的用户数据</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Test</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">testSelectList7</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 创建查询条件构造器对象，通过泛型指定查询结果类型</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">QueryWrapper</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">User</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> queryWrapper </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">QueryWrapper</span><span style="color:#89DDFF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#A6ACCD;">        queryWrapper</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">like</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">o</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">or</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">i </span><span style="color:#C792EA;">-&gt;</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">eq</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">age</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">21</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">likeRight</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">S</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 执行用户列表查询</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">List</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">User</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> userList </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> userMapper</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">selectList</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">queryWrapper</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 遍历用户列表</span></span>
<span class="line"><span style="color:#A6ACCD;">        userList</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;font-style:italic;">::</span><span style="color:#A6ACCD;">println</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">SpringBootTest</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">MybatisPlusWrapperTests</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Autowired</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">private</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">UserMapper</span><span style="color:#E06C75;"> userMapper</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#7F848E;font-style:italic;">// 需求：查询姓名中带有o字母 或者 (年龄 = 21 并且 姓名以S字母开头) 的用户数据</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> testSelectList7</span><span style="color:#ABB2BF;">()</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 创建查询条件构造器对象，通过泛型指定查询结果类型</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">QueryWrapper</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">User</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">queryWrapper</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">QueryWrapper</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">queryWrapper</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">like</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;name&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;o&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                    .</span><span style="color:#61AFEF;">or</span><span style="color:#ABB2BF;">(i </span><span style="color:#C678DD;">-&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">i</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">eq</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;age&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">21</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">likeRight</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;name&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;S&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 执行用户列表查询</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">User</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">userList</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">userMapper</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">selectList</span><span style="color:#ABB2BF;">(queryWrapper);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 遍历用户列表</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">userList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#C678DD;">::</span><span style="color:#ABB2BF;">println);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#E06C75;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre></div><p><strong>控制台输出：</strong></p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">==&gt;</span><span style="color:#A6ACCD;">  Preparing: </span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> id,</span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;">,age,email,create_time,update_time,is_delete </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> user </span><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> is_delete</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">AND</span><span style="color:#A6ACCD;"> (</span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">LIKE</span><span style="color:#A6ACCD;"> ? </span><span style="color:#F78C6C;">OR</span><span style="color:#A6ACCD;"> (age </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ? </span><span style="color:#F78C6C;">AND</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">LIKE</span><span style="color:#A6ACCD;"> ?))</span></span>
<span class="line"><span style="color:#89DDFF;">==&gt;</span><span style="color:#A6ACCD;"> Parameters: %o%(String), </span><span style="color:#F78C6C;">21</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">Integer</span><span style="color:#A6ACCD;">), S%(String)</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">    Columns: id, </span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;">, age, email, create_time, update_time, is_delete</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">Row</span><span style="color:#A6ACCD;">: </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">, Jone, </span><span style="color:#F78C6C;">18</span><span style="color:#A6ACCD;">, Jone@126.com, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">Row</span><span style="color:#A6ACCD;">: </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">, Tom, </span><span style="color:#F78C6C;">28</span><span style="color:#A6ACCD;">, Tom@126.com, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">Row</span><span style="color:#A6ACCD;">: </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">, Sandy, </span><span style="color:#F78C6C;">21</span><span style="color:#A6ACCD;">, Sandy@126.com, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">      Total: </span><span style="color:#F78C6C;">3</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#56B6C2;">==&gt;</span><span style="color:#ABB2BF;">  Preparing: </span><span style="color:#C678DD;">SELECT</span><span style="color:#ABB2BF;"> id,</span><span style="color:#C678DD;">name</span><span style="color:#ABB2BF;">,age,email,create_time,update_time,is_delete </span><span style="color:#C678DD;">FROM</span><span style="color:#ABB2BF;"> user </span><span style="color:#C678DD;">WHERE</span><span style="color:#ABB2BF;"> is_delete</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">AND</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">name</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">LIKE</span><span style="color:#ABB2BF;"> ? </span><span style="color:#C678DD;">OR</span><span style="color:#ABB2BF;"> (age </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> ? </span><span style="color:#C678DD;">AND</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">name</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">LIKE</span><span style="color:#ABB2BF;"> ?))</span></span>
<span class="line"><span style="color:#56B6C2;">==&gt;</span><span style="color:#ABB2BF;"> Parameters: %o%(String), </span><span style="color:#D19A66;">21</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">Integer</span><span style="color:#ABB2BF;">), S%(String)</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#ABB2BF;">    Columns: id, </span><span style="color:#C678DD;">name</span><span style="color:#ABB2BF;">, age, email, create_time, update_time, is_delete</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">Row</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, Jone, </span><span style="color:#D19A66;">18</span><span style="color:#ABB2BF;">, Jone</span><span style="color:#E06C75;">@126</span><span style="color:#ABB2BF;">.com, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">Row</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">, Tom, </span><span style="color:#D19A66;">28</span><span style="color:#ABB2BF;">, Tom</span><span style="color:#E06C75;">@126</span><span style="color:#ABB2BF;">.com, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">Row</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">, Sandy, </span><span style="color:#D19A66;">21</span><span style="color:#ABB2BF;">, Sandy</span><span style="color:#E06C75;">@126</span><span style="color:#ABB2BF;">.com, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#ABB2BF;">      Total: </span><span style="color:#D19A66;">3</span></span>
<span class="line"></span></code></pre></div><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">User(id=1, name=Jone, age=18, email=Jone@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#A6ACCD;">User(id=3, name=Tom, age=28, email=Tom@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#A6ACCD;">User(id=4, name=Sandy, age=21, email=Sandy@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#abb2bf;">User(id=1, name=Jone, age=18, email=Jone@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#abb2bf;">User(id=3, name=Tom, age=28, email=Tom@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#abb2bf;">User(id=4, name=Sandy, age=21, email=Sandy@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#abb2bf;"></span></span></code></pre></div><h4 id="范围查询" tabindex="-1">范围查询 <a class="header-anchor" href="#范围查询" aria-hidden="true">#</a></h4><p>上面的 <code>or</code> 关系需求中，是对相同列的多个值的查询，这种情况在 SQL 中我们可以采用 in 查询来优化。而如果是对相同列的连续范围值的查询，则可以采用 between ... and ...查询来优化。</p><p>下方是 in 查询 和 between ... and ...查询与 MP 中方法的对照表。</p><table><thead><tr><th><strong>SQL 运算符</strong></th><th style="text-align:left;"><strong>含义</strong></th><th><strong>MP 对应方法</strong></th></tr></thead><tbody><tr><td>in (值1, 值2, ...)</td><td style="text-align:left;">在某个列表之间</td><td>in(R column, Object... values) : Children</td></tr><tr><td>not in (值1, 值2, ...)</td><td style="text-align:left;">不在某个列表之间</td><td>notIn(R column, Object... value) : Children</td></tr><tr><td>between ... and ...</td><td style="text-align:left;">在某个范围之间</td><td>between(R column, Object val1, Object val2) : Children</td></tr><tr><td>not between ... and ...</td><td style="text-align:left;">不在某个范围之间</td><td>notBetween(R column, Object val1, Object val2) : Children</td></tr></tbody></table><p><strong>测试代码：</strong></p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">SpringBootTest</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MybatisPlusWrapperTests</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Autowired</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">UserMapper</span><span style="color:#A6ACCD;"> userMapper</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 需求：查询年龄 = 18 或者 年龄 = 24 的用户数据</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Test</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">testSelectList5</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 创建查询条件构造器对象，通过泛型指定查询结果类型</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">QueryWrapper</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">User</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> queryWrapper </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">QueryWrapper</span><span style="color:#89DDFF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 如果是对相同列的多个值查询，使用in查询优化</span></span>
<span class="line"><span style="color:#A6ACCD;">        queryWrapper</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">in</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">age</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">18</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">24</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 执行用户列表查询</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">List</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">User</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> userList </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> userMapper</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">selectList</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">queryWrapper</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 遍历用户列表</span></span>
<span class="line"><span style="color:#A6ACCD;">        userList</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;font-style:italic;">::</span><span style="color:#A6ACCD;">println</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">SpringBootTest</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">MybatisPlusWrapperTests</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Autowired</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">private</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">UserMapper</span><span style="color:#E06C75;"> userMapper</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#7F848E;font-style:italic;">// 需求：查询年龄 = 18 或者 年龄 = 24 的用户数据</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> testSelectList5</span><span style="color:#ABB2BF;">()</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 创建查询条件构造器对象，通过泛型指定查询结果类型</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">QueryWrapper</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">User</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">queryWrapper</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">QueryWrapper</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 如果是对相同列的多个值查询，使用in查询优化</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">queryWrapper</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">in</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;age&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">18</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">24</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 执行用户列表查询</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">User</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">userList</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">userMapper</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">selectList</span><span style="color:#ABB2BF;">(queryWrapper);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 遍历用户列表</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">userList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#C678DD;">::</span><span style="color:#ABB2BF;">println);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre></div><p><strong>控制台输出：</strong></p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">==&gt;</span><span style="color:#A6ACCD;">  Preparing: </span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> id,</span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;">,age,email,create_time,update_time,is_delete </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> user </span><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> is_delete</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">AND</span><span style="color:#A6ACCD;"> (age </span><span style="color:#F78C6C;">IN</span><span style="color:#A6ACCD;"> (?,?))</span></span>
<span class="line"><span style="color:#89DDFF;">==&gt;</span><span style="color:#A6ACCD;"> Parameters: </span><span style="color:#F78C6C;">18</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">Integer</span><span style="color:#A6ACCD;">), </span><span style="color:#F78C6C;">24</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">Integer</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">    Columns: id, </span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;">, age, email, create_time, update_time, is_delete</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">Row</span><span style="color:#A6ACCD;">: </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">, Jone, </span><span style="color:#F78C6C;">18</span><span style="color:#A6ACCD;">, Jone@126.com, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">Row</span><span style="color:#A6ACCD;">: </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">, Billie, </span><span style="color:#F78C6C;">24</span><span style="color:#A6ACCD;">, Billie@126.com, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">      Total: </span><span style="color:#F78C6C;">2</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#56B6C2;">==&gt;</span><span style="color:#ABB2BF;">  Preparing: </span><span style="color:#C678DD;">SELECT</span><span style="color:#ABB2BF;"> id,</span><span style="color:#C678DD;">name</span><span style="color:#ABB2BF;">,age,email,create_time,update_time,is_delete </span><span style="color:#C678DD;">FROM</span><span style="color:#ABB2BF;"> user </span><span style="color:#C678DD;">WHERE</span><span style="color:#ABB2BF;"> is_delete</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">AND</span><span style="color:#ABB2BF;"> (age </span><span style="color:#C678DD;">IN</span><span style="color:#ABB2BF;"> (?,?))</span></span>
<span class="line"><span style="color:#56B6C2;">==&gt;</span><span style="color:#ABB2BF;"> Parameters: </span><span style="color:#D19A66;">18</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">Integer</span><span style="color:#ABB2BF;">), </span><span style="color:#D19A66;">24</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">Integer</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#ABB2BF;">    Columns: id, </span><span style="color:#C678DD;">name</span><span style="color:#ABB2BF;">, age, email, create_time, update_time, is_delete</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">Row</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, Jone, </span><span style="color:#D19A66;">18</span><span style="color:#ABB2BF;">, Jone</span><span style="color:#E06C75;">@126</span><span style="color:#ABB2BF;">.com, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">Row</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">, Billie, </span><span style="color:#D19A66;">24</span><span style="color:#ABB2BF;">, Billie</span><span style="color:#E06C75;">@126</span><span style="color:#ABB2BF;">.com, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#ABB2BF;">      Total: </span><span style="color:#D19A66;">2</span></span>
<span class="line"></span></code></pre></div><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">User(id=1, name=Jone, age=18, email=Jone@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#A6ACCD;">User(id=5, name=Billie, age=24, email=Billie@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#abb2bf;">User(id=1, name=Jone, age=18, email=Jone@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#abb2bf;">User(id=5, name=Billie, age=24, email=Billie@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#abb2bf;"></span></span></code></pre></div><h4 id="模糊查询" tabindex="-1">模糊查询 <a class="header-anchor" href="#模糊查询" aria-hidden="true">#</a></h4><p>除了精确的查询之外， 模糊查询也是使用频率很高的。下方是模糊查询 和 MP 中方法的对照表。</p><table><thead><tr><th><strong>SQL 运算符</strong></th><th style="text-align:left;"><strong>含义</strong></th><th><strong>MP 对应方法</strong></th></tr></thead><tbody><tr><td>like &#39;%A%&#39;</td><td style="text-align:left;">在某个范围之间</td><td>like(R column, Object val) : Children</td></tr><tr><td>not like &#39;%A%&#39;</td><td style="text-align:left;">不在某个范围之间</td><td>notLike(R column, Object val) : Children</td></tr><tr><td>like &#39;%A&#39;</td><td style="text-align:left;">查询</td><td>likeLeft(R column, Object val) : Children</td></tr><tr><td>like &#39;A%&#39;</td><td style="text-align:left;">不在某个列表之间</td><td>likeRight(R column, Object val) : Children</td></tr></tbody></table><p><strong>测试代码：</strong></p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">SpringBootTest</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MybatisPlusWrapperTests</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Autowired</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">UserMapper</span><span style="color:#A6ACCD;"> userMapper</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 需求：查询姓名中带有 o 字母的用户数据</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Test</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">testSelectList6</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 创建查询条件构造器对象，通过泛型指定查询结果类型</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">QueryWrapper</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">User</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> queryWrapper </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">QueryWrapper</span><span style="color:#89DDFF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#A6ACCD;">        queryWrapper</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">like</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">o</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 执行用户列表查询</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">List</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">User</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> userList </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> userMapper</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">selectList</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">queryWrapper</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 遍历用户列表</span></span>
<span class="line"><span style="color:#A6ACCD;">        userList</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;font-style:italic;">::</span><span style="color:#A6ACCD;">println</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">SpringBootTest</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">MybatisPlusWrapperTests</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Autowired</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">private</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">UserMapper</span><span style="color:#E06C75;"> userMapper</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#7F848E;font-style:italic;">// 需求：查询姓名中带有 o 字母的用户数据</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> testSelectList6</span><span style="color:#ABB2BF;">()</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 创建查询条件构造器对象，通过泛型指定查询结果类型</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">QueryWrapper</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">User</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">queryWrapper</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">QueryWrapper</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">queryWrapper</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">like</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;name&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;o&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 执行用户列表查询</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">User</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">userList</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">userMapper</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">selectList</span><span style="color:#ABB2BF;">(queryWrapper);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 遍历用户列表</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">userList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#C678DD;">::</span><span style="color:#ABB2BF;">println);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#E06C75;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre></div><p><strong>控制台输出：</strong></p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">==&gt;</span><span style="color:#A6ACCD;">  Preparing: </span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> id,</span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;">,age,email,create_time,update_time,is_delete </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> user </span><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> is_delete</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">AND</span><span style="color:#A6ACCD;"> (</span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">LIKE</span><span style="color:#A6ACCD;"> ?)</span></span>
<span class="line"><span style="color:#89DDFF;">==&gt;</span><span style="color:#A6ACCD;"> Parameters: %o%(String)</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">    Columns: id, </span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;">, age, email, create_time, update_time, is_delete</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">Row</span><span style="color:#A6ACCD;">: </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">, Jone, </span><span style="color:#F78C6C;">18</span><span style="color:#A6ACCD;">, Jone@126.com, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">Row</span><span style="color:#A6ACCD;">: </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">, Tom, </span><span style="color:#F78C6C;">28</span><span style="color:#A6ACCD;">, Tom@126.com, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">      Total: </span><span style="color:#F78C6C;">2</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#56B6C2;">==&gt;</span><span style="color:#ABB2BF;">  Preparing: </span><span style="color:#C678DD;">SELECT</span><span style="color:#ABB2BF;"> id,</span><span style="color:#C678DD;">name</span><span style="color:#ABB2BF;">,age,email,create_time,update_time,is_delete </span><span style="color:#C678DD;">FROM</span><span style="color:#ABB2BF;"> user </span><span style="color:#C678DD;">WHERE</span><span style="color:#ABB2BF;"> is_delete</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">AND</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">name</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">LIKE</span><span style="color:#ABB2BF;"> ?)</span></span>
<span class="line"><span style="color:#56B6C2;">==&gt;</span><span style="color:#ABB2BF;"> Parameters: %o%(String)</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#ABB2BF;">    Columns: id, </span><span style="color:#C678DD;">name</span><span style="color:#ABB2BF;">, age, email, create_time, update_time, is_delete</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">Row</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, Jone, </span><span style="color:#D19A66;">18</span><span style="color:#ABB2BF;">, Jone</span><span style="color:#E06C75;">@126</span><span style="color:#ABB2BF;">.com, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">Row</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">, Tom, </span><span style="color:#D19A66;">28</span><span style="color:#ABB2BF;">, Tom</span><span style="color:#E06C75;">@126</span><span style="color:#ABB2BF;">.com, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#ABB2BF;">      Total: </span><span style="color:#D19A66;">2</span></span>
<span class="line"></span></code></pre></div><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">User(id=1, name=Jone, age=18, email=Jone@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#A6ACCD;">User(id=3, name=Tom, age=28, email=Tom@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#abb2bf;">User(id=1, name=Jone, age=18, email=Jone@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#abb2bf;">User(id=3, name=Tom, age=28, email=Tom@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#abb2bf;"></span></span></code></pre></div><h3 id="分组查询" tabindex="-1">分组查询 <a class="header-anchor" href="#分组查询" aria-hidden="true">#</a></h3><p>好了，写了这么多个查询示例，笔者相信聪明的你已经悟了。我们本篇毕竟不是去讲解 SQL 语句的，所以笔者最后把分组查询和排序查询的 API 再列一下，你想测试就自行测试一下吧。</p><table><thead><tr><th><strong>SQL 运算符</strong></th><th style="text-align:left;"><strong>含义</strong></th><th><strong>MP 对应方法</strong></th><th>示例</th></tr></thead><tbody><tr><td>group by 列1, 列2</td><td style="text-align:left;">根据一个列或多个列分组</td><td>groupBy(R column) : Children</td><td>例: groupBy(&quot;id&quot;, &quot;name&quot;)</td></tr><tr><td>having ...</td><td style="text-align:left;">分组查询后的筛选条件</td><td>having(String sqlHaving, Object... params) : Children</td><td>例1: having(&quot;sum(age) &gt; 10&quot;) 例2：having(&quot;sum(age) &gt; {0}&quot;, 10)</td></tr></tbody></table><h3 id="排序查询" tabindex="-1">排序查询 <a class="header-anchor" href="#排序查询" aria-hidden="true">#</a></h3><table><thead><tr><th><strong>SQL 运算符</strong></th><th style="text-align:left;"><strong>含义</strong></th><th><strong>MP 对应方法</strong></th><th>示例</th></tr></thead><tbody><tr><td>order by 列 ASC</td><td style="text-align:left;">按指定列升序排序</td><td>orderByAsc(R... columns) : Children</td><td>例: orderByAsc(&quot;id&quot;, &quot;name&quot;)</td></tr><tr><td>order by 列 DESC</td><td style="text-align:left;">按指定列降序排序</td><td>orderByDesc(R... columns) : Children</td><td>例: orderByDesc(&quot;id&quot;, &quot;name&quot;)</td></tr></tbody></table><h3 id="连接查询" tabindex="-1">连接查询 <a class="header-anchor" href="#连接查询" aria-hidden="true">#</a></h3><p>MP 的确很强大，但是它封装的接口都是针对单表的，所以如果我们要多表查询的时候，还是需要采用原生的 MyBatis 写法，这里笔者就不再介绍了。</p><h2 id="lambdaquerywrapper" tabindex="-1">LambdaQueryWrapper <a class="header-anchor" href="#lambdaquerywrapper" aria-hidden="true">#</a></h2><p>LambdaQueryWrapper 和 QueryWrapper 只差一个 Lambda 语法的使用而已，不知道你是否还记得《快速入门》篇中介绍的 MP 特点，其中有一条就是：<strong>支持 Lambda 形式调用</strong> ：通过 Lambda 表达式，方便的编写各类查询条件，无需再担心字段写错。[1]</p><p><strong>测试代码：</strong></p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">SpringBootTest</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MybatisPlusWrapperTests</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Autowired</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">UserMapper</span><span style="color:#A6ACCD;"> userMapper</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 需求：查询年龄 &gt;= 21 的用户数据</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Test</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">testSelectList8</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 创建查询条件构造器对象，通过泛型指定查询结果类型</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">LambdaQueryWrapper</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">User</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> queryWrapper </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">LambdaQueryWrapper</span><span style="color:#89DDFF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// Lambda 语法无需再担心字段写错</span></span>
<span class="line"><span style="color:#A6ACCD;">        queryWrapper</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ge</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">User</span><span style="color:#89DDFF;font-style:italic;">::</span><span style="color:#A6ACCD;">getAge</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">21</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 执行用户列表查询</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">List</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">User</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> userList </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> userMapper</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">selectList</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">queryWrapper</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 遍历用户列表</span></span>
<span class="line"><span style="color:#A6ACCD;">        userList</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;font-style:italic;">::</span><span style="color:#A6ACCD;">println</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">SpringBootTest</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">MybatisPlusWrapperTests</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Autowired</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">private</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">UserMapper</span><span style="color:#E06C75;"> userMapper</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#7F848E;font-style:italic;">// 需求：查询年龄 &gt;= 21 的用户数据</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> testSelectList8</span><span style="color:#ABB2BF;">()</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 创建查询条件构造器对象，通过泛型指定查询结果类型</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">LambdaQueryWrapper</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">User</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">queryWrapper</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">LambdaQueryWrapper</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// Lambda 语法无需再担心字段写错</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">queryWrapper</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">ge</span><span style="color:#ABB2BF;">(User</span><span style="color:#C678DD;">::</span><span style="color:#ABB2BF;">getAge, </span><span style="color:#D19A66;">21</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 执行用户列表查询</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">User</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">userList</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">userMapper</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">selectList</span><span style="color:#ABB2BF;">(queryWrapper);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 遍历用户列表</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">userList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#C678DD;">::</span><span style="color:#ABB2BF;">println);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#E06C75;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre></div><p><strong>控制台输出：</strong></p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">==&gt;</span><span style="color:#A6ACCD;">  Preparing: </span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> id,</span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;">,age,email,create_time,update_time,is_delete </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> user </span><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> is_delete</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">AND</span><span style="color:#A6ACCD;"> (age </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#A6ACCD;"> ?)</span></span>
<span class="line"><span style="color:#89DDFF;">==&gt;</span><span style="color:#A6ACCD;"> Parameters: </span><span style="color:#F78C6C;">21</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">Integer</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">    Columns: id, </span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;">, age, email, create_time, update_time, is_delete</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">Row</span><span style="color:#A6ACCD;">: </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">, Tom, </span><span style="color:#F78C6C;">28</span><span style="color:#A6ACCD;">, Tom@126.com, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">Row</span><span style="color:#A6ACCD;">: </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">, Sandy, </span><span style="color:#F78C6C;">21</span><span style="color:#A6ACCD;">, Sandy@126.com, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">Row</span><span style="color:#A6ACCD;">: </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">, Billie, </span><span style="color:#F78C6C;">24</span><span style="color:#A6ACCD;">, Billie@126.com, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">2021</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">47</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;==</span><span style="color:#A6ACCD;">      Total: </span><span style="color:#F78C6C;">3</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#56B6C2;">==&gt;</span><span style="color:#ABB2BF;">  Preparing: </span><span style="color:#C678DD;">SELECT</span><span style="color:#ABB2BF;"> id,</span><span style="color:#C678DD;">name</span><span style="color:#ABB2BF;">,age,email,create_time,update_time,is_delete </span><span style="color:#C678DD;">FROM</span><span style="color:#ABB2BF;"> user </span><span style="color:#C678DD;">WHERE</span><span style="color:#ABB2BF;"> is_delete</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">AND</span><span style="color:#ABB2BF;"> (age </span><span style="color:#56B6C2;">&gt;=</span><span style="color:#ABB2BF;"> ?)</span></span>
<span class="line"><span style="color:#56B6C2;">==&gt;</span><span style="color:#ABB2BF;"> Parameters: </span><span style="color:#D19A66;">21</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">Integer</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#ABB2BF;">    Columns: id, </span><span style="color:#C678DD;">name</span><span style="color:#ABB2BF;">, age, email, create_time, update_time, is_delete</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">Row</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">, Tom, </span><span style="color:#D19A66;">28</span><span style="color:#ABB2BF;">, Tom</span><span style="color:#E06C75;">@126</span><span style="color:#ABB2BF;">.com, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">Row</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">, Sandy, </span><span style="color:#D19A66;">21</span><span style="color:#ABB2BF;">, Sandy</span><span style="color:#E06C75;">@126</span><span style="color:#ABB2BF;">.com, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">Row</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">, Billie, </span><span style="color:#D19A66;">24</span><span style="color:#ABB2BF;">, Billie</span><span style="color:#E06C75;">@126</span><span style="color:#ABB2BF;">.com, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2021</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">47</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;==</span><span style="color:#ABB2BF;">      Total: </span><span style="color:#D19A66;">3</span></span>
<span class="line"></span></code></pre></div><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">User(id=3, name=Tom, age=28, email=Tom@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#A6ACCD;">User(id=4, name=Sandy, age=21, email=Sandy@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#A6ACCD;">User(id=5, name=Billie, age=24, email=Billie@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#abb2bf;">User(id=3, name=Tom, age=28, email=Tom@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#abb2bf;">User(id=4, name=Sandy, age=21, email=Sandy@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#abb2bf;">User(id=5, name=Billie, age=24, email=Billie@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#abb2bf;"></span></span></code></pre></div><h2 id="alleq" tabindex="-1">allEq <a class="header-anchor" href="#alleq" aria-hidden="true">#</a></h2><p>最后，笔者再介绍一个比较实用的方法：<code>allEq</code>，当你得到的查询条件都被封装好在一个 Map 集合中时，为了使用 MP 查询这些条件，难道还要一个个的将数据取出来封装为 Wrapper 吗？显然我们是拒绝的。</p><p><code>allEq</code> 可以解决此问题。</p><p><strong>测试代码：</strong></p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">SpringBootTest</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MybatisPlusWrapperTests</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Autowired</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">UserMapper</span><span style="color:#A6ACCD;"> userMapper</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 需求：查询年龄 = 28 并且姓名为Tom的用户数据</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Test</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">testSelectList9</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 创建查询条件构造器对象，通过泛型指定查询结果类型</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">QueryWrapper</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">User</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> queryWrapper </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">QueryWrapper</span><span style="color:#89DDFF;">&lt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 模拟一个封装好查询条件的 Map 集合</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">Map</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Object</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> map </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">HashMap</span><span style="color:#89DDFF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#A6ACCD;">        map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">put</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">age</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">28</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">put</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Tom</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 将Map直接传给Wrapper的allEq方法，它会自行识别查询条件</span></span>
<span class="line"><span style="color:#A6ACCD;">        queryWrapper</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">allEq</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">map</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 执行用户列表查询</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">List</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">User</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> userList </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> userMapper</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">selectList</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">queryWrapper</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 遍历用户列表</span></span>
<span class="line"><span style="color:#A6ACCD;">        userList</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;font-style:italic;">::</span><span style="color:#A6ACCD;">println</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">SpringBootTest</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">MybatisPlusWrapperTests</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Autowired</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">private</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">UserMapper</span><span style="color:#E06C75;"> userMapper</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#7F848E;font-style:italic;">// 需求：查询年龄 = 28 并且姓名为Tom的用户数据</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> testSelectList9</span><span style="color:#ABB2BF;">()</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 创建查询条件构造器对象，通过泛型指定查询结果类型</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">QueryWrapper</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">User</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">queryWrapper</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">QueryWrapper</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 模拟一个封装好查询条件的 Map 集合</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">Map</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">map</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">HashMap</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">map</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">put</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;age&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">28</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">map</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">put</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;name&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;Tom&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 将Map直接传给Wrapper的allEq方法，它会自行识别查询条件</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">queryWrapper</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">allEq</span><span style="color:#ABB2BF;">(map);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 执行用户列表查询</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">User</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">userList</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">userMapper</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">selectList</span><span style="color:#ABB2BF;">(queryWrapper);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 遍历用户列表</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">userList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#C678DD;">::</span><span style="color:#ABB2BF;">println);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre></div><p><strong>控制台输出：</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">==&gt;  Preparing: SELECT id,name,age,email,create_time,update_time,is_delete FROM user WHERE is_delete=0 AND (name = ? AND age = ?)</span></span>
<span class="line"><span style="color:#A6ACCD;">==&gt; Parameters: Tom(String), 28(Integer)</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;==    Columns: id, name, age, email, create_time, update_time, is_delete</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;==        Row: 3, Tom, 28, Tom@126.com, 2021-01-23 17:47:52, 2021-01-23 17:47:52, 0</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;==      Total: 1</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#abb2bf;">==&gt;  Preparing: SELECT id,name,age,email,create_time,update_time,is_delete FROM user WHERE is_delete=0 AND (name = ? AND age = ?)</span></span>
<span class="line"><span style="color:#abb2bf;">==&gt; Parameters: Tom(String), 28(Integer)</span></span>
<span class="line"><span style="color:#abb2bf;">&lt;==    Columns: id, name, age, email, create_time, update_time, is_delete</span></span>
<span class="line"><span style="color:#abb2bf;">&lt;==        Row: 3, Tom, 28, Tom@126.com, 2021-01-23 17:47:52, 2021-01-23 17:47:52, 0</span></span>
<span class="line"><span style="color:#abb2bf;">&lt;==      Total: 1</span></span>
<span class="line"><span style="color:#abb2bf;"></span></span></code></pre></div><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">User(id=3, name=Tom, age=28, email=Tom@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#abb2bf;">User(id=3, name=Tom, age=28, email=Tom@126.com, createTime=2021-01-23T17:47:52, updateTime=2021-01-23T17:47:52, isDelete=0)</span></span>
<span class="line"><span style="color:#abb2bf;"></span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">笔者说</p><p>需要注意的是 <code>allEq()</code> 方法 <strong>只能用于具有 and 关系且都是等值判断的情况</strong> 。</p></div><h2 id="参考文献" tabindex="-1">参考文献 <a class="header-anchor" href="#参考文献" aria-hidden="true">#</a></h2><p>[1]MyBatis Plus 官网. 指南[EB/OL]. <a href="https://baomidou.com/guide/" target="_blank" rel="noreferrer">https://baomidou.com/guide/</a>. 2021-01-18</p><h2 id="后记" tabindex="-1">后记 <a class="header-anchor" href="#后记" aria-hidden="true">#</a></h2><p><strong>C：</strong> 好了，MP 的条件构造器就介绍完了。笔者有很多 API 没有带大家测试，但我想你也能明白，即便我全部测试了，它也不一定能被你用上，灵活使用它们是需要时间积累的。所以说，讲些典型的，让你 &quot;悟了&quot; MP 的大致规律和节奏，这才是最重要的。</p><p>除了 API 之外，实际上，MP 还有一些功能，因为时间原因，笔者在本次系列并没有提及，你可以前往官网查阅一下，或者等后面笔者时间允许的时候，会再去介绍下它的其他功能。</p><p><strong>最后的最后，笔者个人建议，在日常开发中，如果遇到的需求需要写一个比较复杂的 SQL，那还是直接使用 MyBatis 原生写法去 XML 中写吧，毕竟 MyBatis 最强大的优势还是体现在 XML 的 SQL 中。</strong></p><div class="info custom-block"><p class="custom-block-title">笔者说</p><p>对于技术的学习，笔者一贯遵循的步骤是：先用最最简单的 demo 让它跑起来，然后学学它的最最常用 API 和 配置让自己能用起来，最后熟练使用的基础上，在空闲时尝试阅读它的源码让自己能够洞彻它的运行机制，部分问题出现的原因，同时借鉴这些技术实现来提升自己的代码高度。</p><p>所以在笔者的文章中，前期基本都是小白文，仅仅穿插很少量的源码研究。当然等小白文更新多了，你们还依然喜欢，后期会不定时专门对部分技术的源码进行解析。</p></div>`,115);function b(s,T,f,q,v,W){const o=t,e=F("ClientOnly");return p(),r("div",null,[g,y(e,null,{default:C(()=>{var a,n;return[(((a=s.$frontmatter)==null?void 0:a.aside)??!0)&&(((n=s.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(p(),D(o,{key:0,article:s.$frontmatter},null,8,["article"])):i("",!0)]}),_:1}),h])}const S=c(m,[["render",b]]);export{k as __pageData,S as default};
