import{_ as t}from"./chunks/ArticleMetadata.dd4bf5dc.js";import{_ as c,c as r,g as y,w as F,b as l,f as i,a as B,i as D,o as p,e as A,j as C}from"./app.960cb299.js";const E="/assets/202102241306195.a9317d8c.png",g="/assets/202102241307200.caa91de8.png",f="/assets/202102241308500.97402037.gif",d="/assets/202102241309600.cd9a599b.png",u="/assets/202102241310700.67f633ba.png",m="/assets/202102241311800.4f782651.gif",M=JSON.parse('{"title":"代码生成器","description":"","frontmatter":{"title":"代码生成器","author":"查尔斯","date":"2021/02/24 22:34","categories":["MyBatis-Plus快速入门"],"tags":["MyBatis Plus","MyBatis","ORM框架"]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"使用步骤","slug":"使用步骤","link":"#使用步骤","children":[{"level":3,"title":"添加依赖","slug":"添加依赖","link":"#添加依赖","children":[]},{"level":3,"title":"创建入口类","slug":"创建入口类","link":"#创建入口类","children":[]},{"level":3,"title":"编写配置","slug":"编写配置","link":"#编写配置","children":[]},{"level":3,"title":"测试生成","slug":"测试生成","link":"#测试生成","children":[]},{"level":3,"title":"模块化生成","slug":"模块化生成","link":"#模块化生成","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]},{"level":2,"title":"后记","slug":"后记","link":"#后记","children":[]}],"relativePath":"courses/mybatis/02-MyBatis-Plus基础/05-代码生成器.md","lastUpdated":1677831742000}'),h={name:"courses/mybatis/02-MyBatis-Plus基础/05-代码生成器.md"},b=l("h1",{id:"代码生成器",tabindex:"-1"},[i("代码生成器 "),l("a",{class:"header-anchor",href:"#代码生成器","aria-hidden":"true"},"#")],-1),S=B('<h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-hidden="true">#</a></h2><p><strong>C：</strong> 做了程序员之后，你就会发现自己再也看不得一些繁琐重复的东西，尤其是写代码的时候。</p><p>“好麻烦！这样写工作效率太低了吧！”</p><p>“写这么多冗余代码干嘛？提出来不好吗？”</p><p>....</p><p>开玩笑的说，程序员这个岗位诞生之后，最终的目标就是 “取代同行，取悦自己，公司再取代你”。</p><p><img src="'+E+`" alt="202102241306195"></p><p>为了 “取悦” 自己（简化大量的重复工作量），各种自动化或生成工具应运而生，解决重复代码方面最为典型的就是代码生成器了。</p><p>本篇，笔者就主要带你认识一下 MP 自带的代码生成器。</p><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">笔者说</p><p>MP 诞生的目的就是为了简化 MyBatis，但简化后依然有些部分有重复性，这时候可以靠 MP 提供的一个代码生成器：AutoGenerator 来解决。</p><p>通过 AutoGenerator 可以快速生成 Entity、Mapper、Mapper XML、Service、Controller 等各个模块的代码，极大的提升了开发效率。[1]</p></div><h2 id="使用步骤" tabindex="-1">使用步骤 <a class="header-anchor" href="#使用步骤" aria-hidden="true">#</a></h2><p>为了测试 MP 的代码生成器，记得提前将之前项目备份一下，这样我们就可以清空掉原来项目代码，然后使用 MP 的代码生成器来对之前数据库进行代码生成了。</p><h3 id="添加依赖" tabindex="-1">添加依赖 <a class="header-anchor" href="#添加依赖" aria-hidden="true">#</a></h3><p>MP 从 <code>3.0.3</code> 之后移除了代码生成器与模板引擎的默认依赖[1]，所以，当我们需要使用代码生成器时，需要先添加一下这两个依赖。</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 代码生成器 依赖 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">com.baomidou</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">mybatis-plus-generator</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">3.4.1</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 模板引擎 依赖 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">org.freemarker</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">freemarker</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">2.3.31</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!-- 代码生成器 依赖 --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">dependency</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">groupId</span><span style="color:#ABB2BF;">&gt;com.baomidou&lt;/</span><span style="color:#E06C75;">groupId</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">artifactId</span><span style="color:#ABB2BF;">&gt;mybatis-plus-generator&lt;/</span><span style="color:#E06C75;">artifactId</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">version</span><span style="color:#ABB2BF;">&gt;3.4.1&lt;/</span><span style="color:#E06C75;">version</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">dependency</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!-- 模板引擎 依赖 --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">dependency</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">groupId</span><span style="color:#ABB2BF;">&gt;org.freemarker&lt;/</span><span style="color:#E06C75;">groupId</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">artifactId</span><span style="color:#ABB2BF;">&gt;freemarker&lt;/</span><span style="color:#E06C75;">artifactId</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">version</span><span style="color:#ABB2BF;">&gt;2.3.31&lt;/</span><span style="color:#E06C75;">version</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">dependency</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">笔者说</p><p>笔者这里选择的模板引擎是 freemarker，它是 Apache 开源的一个知名模板技术。</p><p>另外，MP 也支持 Velocity（默认）、Beetl，你可以选择自己熟悉的模板引擎，如果都不满足要求，也可以采用自定义模板引擎。[1]</p></div><h3 id="创建入口类" tabindex="-1">创建入口类 <a class="header-anchor" href="#创建入口类" aria-hidden="true">#</a></h3><p>添加好依赖之后，创建一个生成器入口类，就可以开始使用 MP 的代码生成器了。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * MyBatis Plus 代码生成器入口类</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * 执行 main 方法控制台输入模块表名回车自动生成对应项目目录中</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> *</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#F78C6C;font-style:italic;">@author</span><span style="color:#676E95;font-style:italic;"> Charles7c</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#F78C6C;font-style:italic;">@since</span><span style="color:#676E95;font-style:italic;"> 2021/1/28</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">CodeGenerator</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * MyBatis Plus 代码生成器入口类</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 执行 main 方法控制台输入模块表名回车自动生成对应项目目录中</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@author</span><span style="color:#7F848E;font-style:italic;"> Charles7c</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@since</span><span style="color:#7F848E;font-style:italic;"> 2021/1/28</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">CodeGenerator</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">static</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">)</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="编写配置" tabindex="-1">编写配置 <a class="header-anchor" href="#编写配置" aria-hidden="true">#</a></h3><p>MP 的代码生成器提供了大量的自定义配置参数供用户选择，能够满足绝大部分人的使用需求[1]，接下来，我们在 <code>main</code> 方法中配置一下生成器。</p><p>第一步：初始化代码生成器。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 创建代码生成器对象</span></span>
<span class="line"><span style="color:#C792EA;">AutoGenerator</span><span style="color:#A6ACCD;"> generator </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">AutoGenerator</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 指定模板引擎为FreeMarker，如果你使用默认的引擎velocity则无需此配置</span></span>
<span class="line"><span style="color:#A6ACCD;">generator</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setTemplateEngine</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">FreemarkerTemplateEngine</span><span style="color:#89DDFF;">());</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 创建代码生成器对象</span></span>
<span class="line"><span style="color:#E5C07B;">AutoGenerator</span><span style="color:#E06C75;"> generator </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">AutoGenerator</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 指定模板引擎为FreeMarker，如果你使用默认的引擎velocity则无需此配置</span></span>
<span class="line"><span style="color:#E5C07B;">generator</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setTemplateEngine</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">FreemarkerTemplateEngine</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"></span></code></pre></div><p>第二步：指定全局配置。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 创建全局配置对象</span></span>
<span class="line"><span style="color:#C792EA;">GlobalConfig</span><span style="color:#A6ACCD;"> globalConfig </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GlobalConfig</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 指定生成文件的输出目录【默认 D 盘根目录】</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// System.getProperty(&quot;user.dir&quot;) 获取到的是当前项目的绝对路径</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 输出目录示例：D:\\IdeaProjects\\mybatis-plus-demo\\src\\main\\java</span></span>
<span class="line"><span style="color:#A6ACCD;">globalConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setOutputDir</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getProperty</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">user.dir</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/src/main/java</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 指定开发人员</span></span>
<span class="line"><span style="color:#A6ACCD;">globalConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setAuthor</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Charles7c</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 指定是否打开输出目录</span></span>
<span class="line"><span style="color:#A6ACCD;">globalConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setOpen</span><span style="color:#89DDFF;">(false);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 指定全局配置</span></span>
<span class="line"><span style="color:#A6ACCD;">generator</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setGlobalConfig</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">globalConfig</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 创建全局配置对象</span></span>
<span class="line"><span style="color:#E5C07B;">GlobalConfig</span><span style="color:#E06C75;"> globalConfig </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">GlobalConfig</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 指定生成文件的输出目录【默认 D 盘根目录】</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// System.getProperty(&quot;user.dir&quot;) 获取到的是当前项目的绝对路径</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 输出目录示例：D:\\IdeaProjects\\mybatis-plus-demo\\src\\main\\java</span></span>
<span class="line"><span style="color:#E5C07B;">globalConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setOutputDir</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getProperty</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;user.dir&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;/src/main/java&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 指定开发人员</span></span>
<span class="line"><span style="color:#E5C07B;">globalConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setAuthor</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Charles7c&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 指定是否打开输出目录</span></span>
<span class="line"><span style="color:#E5C07B;">globalConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setOpen</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 指定全局配置</span></span>
<span class="line"><span style="color:#E5C07B;">generator</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setGlobalConfig</span><span style="color:#ABB2BF;">(globalConfig);</span></span>
<span class="line"></span></code></pre></div><p>第三步：指定包名配置，通过该配置，指定生成代码的包路径。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 创建包配置对象</span></span>
<span class="line"><span style="color:#C792EA;">PackageConfig</span><span style="color:#A6ACCD;"> packageConfig </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">PackageConfig</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 指定父包名</span></span>
<span class="line"><span style="color:#A6ACCD;">packageConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setParent</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">com.example</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 指定包名配置</span></span>
<span class="line"><span style="color:#A6ACCD;">generator</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setPackageInfo</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">packageConfig</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 创建包配置对象</span></span>
<span class="line"><span style="color:#E5C07B;">PackageConfig</span><span style="color:#E06C75;"> packageConfig </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">PackageConfig</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 指定父包名</span></span>
<span class="line"><span style="color:#E5C07B;">packageConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setParent</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;com.example&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 指定包名配置</span></span>
<span class="line"><span style="color:#E5C07B;">generator</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setPackageInfo</span><span style="color:#ABB2BF;">(packageConfig);</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">笔者说</p><p>仅指定父包名就可以，MP 指定好了子包名。看看它的源码吧，实体类的包名默认是 <code>entity</code>，业务类的包名默认是 <code>service</code> ...</p></div><p><img src="`+g+`" alt="202102241307200"></p><p>第四步：指定数据源配置，通过该配置，指定需要生成代码的具体数据库。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 创建数据源配置对象</span></span>
<span class="line"><span style="color:#C792EA;">DataSourceConfig</span><span style="color:#A6ACCD;"> dataSourceConfig </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">DataSourceConfig</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 指定数据源信息</span></span>
<span class="line"><span style="color:#A6ACCD;">dataSourceConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setUrl</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">jdbc:mysql://localhost:3306/mybatisplus_demodb?serverTimezone=Asia/Shanghai&amp;useUnicode=true&amp;useSSL=false&amp;characterEncoding=utf8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">dataSourceConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setDriverName</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">com.mysql.cj.jdbc.Driver</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">dataSourceConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setUsername</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">root</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">dataSourceConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setPassword</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">root</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 指定数据源配置</span></span>
<span class="line"><span style="color:#A6ACCD;">generator</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setDataSource</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">dataSourceConfig</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 创建数据源配置对象</span></span>
<span class="line"><span style="color:#E5C07B;">DataSourceConfig</span><span style="color:#E06C75;"> dataSourceConfig </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">DataSourceConfig</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 指定数据源信息</span></span>
<span class="line"><span style="color:#E5C07B;">dataSourceConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setUrl</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;jdbc:mysql://localhost:3306/mybatisplus_demodb?serverTimezone=Asia/Shanghai&amp;useUnicode=true&amp;useSSL=false&amp;characterEncoding=utf8&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">dataSourceConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setDriverName</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;com.mysql.cj.jdbc.Driver&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">dataSourceConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setUsername</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">dataSourceConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setPassword</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 指定数据源配置</span></span>
<span class="line"><span style="color:#E5C07B;">generator</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setDataSource</span><span style="color:#ABB2BF;">(dataSourceConfig);</span></span>
<span class="line"></span></code></pre></div><p>第五步：指定策略配置，通过该配置，可指定需要生成哪些表或者排除哪些表。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 创建策略配置对象</span></span>
<span class="line"><span style="color:#C792EA;">StrategyConfig</span><span style="color:#A6ACCD;"> strategyConfig </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">StrategyConfig</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 指定数据库表映射到实体的命名策略</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 下划线转驼峰命名：underline_to_camel</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 不做任何改变，原样输出：no_change</span></span>
<span class="line"><span style="color:#A6ACCD;">strategyConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setNaming</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">NamingStrategy</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">underline_to_camel</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 指定数据库表字段映射到实体的命名策略</span></span>
<span class="line"><span style="color:#A6ACCD;">strategyConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setColumnNaming</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">NamingStrategy</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">underline_to_camel</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 指定实体类是否采用 lombok 注解</span></span>
<span class="line"><span style="color:#A6ACCD;">strategyConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setEntityLombokModel</span><span style="color:#89DDFF;">(true);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 指定生成的Controller类是否采用@RestController注解</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 默认false：@Controller -&gt; true：@RestController</span></span>
<span class="line"><span style="color:#A6ACCD;">strategyConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setRestControllerStyle</span><span style="color:#89DDFF;">(true);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 指定策略配置</span></span>
<span class="line"><span style="color:#A6ACCD;">generator</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setStrategy</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">strategyConfig</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 创建策略配置对象</span></span>
<span class="line"><span style="color:#E5C07B;">StrategyConfig</span><span style="color:#E06C75;"> strategyConfig </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">StrategyConfig</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 指定数据库表映射到实体的命名策略</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 下划线转驼峰命名：underline_to_camel</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 不做任何改变，原样输出：no_change</span></span>
<span class="line"><span style="color:#E5C07B;">strategyConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setNaming</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">NamingStrategy</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">underline_to_camel</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 指定数据库表字段映射到实体的命名策略</span></span>
<span class="line"><span style="color:#E5C07B;">strategyConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setColumnNaming</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">NamingStrategy</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">underline_to_camel</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 指定实体类是否采用 lombok 注解</span></span>
<span class="line"><span style="color:#E5C07B;">strategyConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setEntityLombokModel</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 指定生成的Controller类是否采用@RestController注解</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 默认false：@Controller -&gt; true：@RestController</span></span>
<span class="line"><span style="color:#E5C07B;">strategyConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setRestControllerStyle</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 指定策略配置</span></span>
<span class="line"><span style="color:#E5C07B;">generator</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setStrategy</span><span style="color:#ABB2BF;">(strategyConfig);</span></span>
<span class="line"></span></code></pre></div><p>第六步：执行生成。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 执行生成</span></span>
<span class="line"><span style="color:#A6ACCD;">generator</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">execute</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 执行生成</span></span>
<span class="line"><span style="color:#E5C07B;">generator</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">execute</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span></code></pre></div><h3 id="测试生成" tabindex="-1">测试生成 <a class="header-anchor" href="#测试生成" aria-hidden="true">#</a></h3><p><img src="`+f+'" alt="202102241308500"></p><h3 id="模块化生成" tabindex="-1">模块化生成 <a class="header-anchor" href="#模块化生成" aria-hidden="true">#</a></h3><p>上方的使用方式是直接基于所有数据库表进行全部生成，但是当我们的项目进行了模块拆分，这时候我们可以对指定模块的指定表单独生成。</p><p>拆分了模块的项目数据库表，示例如下：</p><p><img src="'+d+'" alt="202102241309600"></p><p>我们也模拟一下，将数据库表重命名为 <code>sys_user</code>。</p><p><img src="'+u+`" alt="202102241310700"></p><p>然后，我们改动一下第三步，添加模块名设置。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 创建包配置对象</span></span>
<span class="line"><span style="color:#C792EA;">PackageConfig</span><span style="color:#A6ACCD;"> packageConfig </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">PackageConfig</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 指定父包名</span></span>
<span class="line"><span style="color:#A6ACCD;">packageConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setParent</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">com.example</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 指定父包下模块名，例如：用户模块user、角色模块role...</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 如果拆分输入模块，则每个模块有自己的全套controller、service、dao...</span></span>
<span class="line"><span style="color:#A6ACCD;">packageConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setModuleName</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">scanner</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">模块名</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 指定包名配置</span></span>
<span class="line"><span style="color:#A6ACCD;">generator</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setPackageInfo</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">packageConfig</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 创建包配置对象</span></span>
<span class="line"><span style="color:#E5C07B;">PackageConfig</span><span style="color:#E06C75;"> packageConfig </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">PackageConfig</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 指定父包名</span></span>
<span class="line"><span style="color:#E5C07B;">packageConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setParent</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;com.example&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 指定父包下模块名，例如：用户模块user、角色模块role...</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 如果拆分输入模块，则每个模块有自己的全套controller、service、dao...</span></span>
<span class="line"><span style="color:#E5C07B;">packageConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setModuleName</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">scanner</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;模块名&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 指定包名配置</span></span>
<span class="line"><span style="color:#E5C07B;">generator</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setPackageInfo</span><span style="color:#ABB2BF;">(packageConfig);</span></span>
<span class="line"></span></code></pre></div><p>再改动一下第五步，添加要进行代码生成的数据表设置及数据表前缀去除设置。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 创建策略配置对象</span></span>
<span class="line"><span style="color:#C792EA;">StrategyConfig</span><span style="color:#A6ACCD;"> strategyConfig </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">StrategyConfig</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 指定数据库表映射到实体的命名策略</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 下划线转驼峰命名：underline_to_camel</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 不做任何改变，原样输出：no_change</span></span>
<span class="line"><span style="color:#A6ACCD;">strategyConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setNaming</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">NamingStrategy</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">underline_to_camel</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 指定数据库表字段映射到实体的命名策略</span></span>
<span class="line"><span style="color:#A6ACCD;">strategyConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setColumnNaming</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">NamingStrategy</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">underline_to_camel</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 指定实体类是否采用 lombok 注解</span></span>
<span class="line"><span style="color:#A6ACCD;">strategyConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setEntityLombokModel</span><span style="color:#89DDFF;">(true);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 指定生成的Controller类是否采用@RestController注解</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 默认false：@Controller -&gt; true：@RestController</span></span>
<span class="line"><span style="color:#A6ACCD;">strategyConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setRestControllerStyle</span><span style="color:#89DDFF;">(true);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 指定需要包含的表名，允许正则表达式（与exclude二选一配置）</span></span>
<span class="line"><span style="color:#A6ACCD;">strategyConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setInclude</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">scanner</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">表名，多个英文逗号分割</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">split</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 指定要去除的表前缀</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 如果表是按模块划分，例如：系统模块的用户表是 sys_user，那么要去除的表前缀就是 sys_</span></span>
<span class="line"><span style="color:#A6ACCD;">strategyConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setTablePrefix</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">packageConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getModuleName</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">_</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 指定策略配置</span></span>
<span class="line"><span style="color:#A6ACCD;">generator</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setStrategy</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">strategyConfig</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 创建策略配置对象</span></span>
<span class="line"><span style="color:#E5C07B;">StrategyConfig</span><span style="color:#E06C75;"> strategyConfig </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">StrategyConfig</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 指定数据库表映射到实体的命名策略</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 下划线转驼峰命名：underline_to_camel</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 不做任何改变，原样输出：no_change</span></span>
<span class="line"><span style="color:#E5C07B;">strategyConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setNaming</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">NamingStrategy</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">underline_to_camel</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 指定数据库表字段映射到实体的命名策略</span></span>
<span class="line"><span style="color:#E5C07B;">strategyConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setColumnNaming</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">NamingStrategy</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">underline_to_camel</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 指定实体类是否采用 lombok 注解</span></span>
<span class="line"><span style="color:#E5C07B;">strategyConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setEntityLombokModel</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 指定生成的Controller类是否采用@RestController注解</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 默认false：@Controller -&gt; true：@RestController</span></span>
<span class="line"><span style="color:#E5C07B;">strategyConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setRestControllerStyle</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 指定需要包含的表名，允许正则表达式（与exclude二选一配置）</span></span>
<span class="line"><span style="color:#E5C07B;">strategyConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setInclude</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">scanner</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;表名，多个英文逗号分割&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">split</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;,&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 指定要去除的表前缀</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 如果表是按模块划分，例如：系统模块的用户表是 sys_user，那么要去除的表前缀就是 sys_</span></span>
<span class="line"><span style="color:#E5C07B;">strategyConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setTablePrefix</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">packageConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getModuleName</span><span style="color:#ABB2BF;">() </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;_&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 指定策略配置</span></span>
<span class="line"><span style="color:#E5C07B;">generator</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setStrategy</span><span style="color:#ABB2BF;">(strategyConfig);</span></span>
<span class="line"></span></code></pre></div><p>为了输入更加方便，我们可以定义一个 <code>scanner</code> 方法来动态输入。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * &lt;p&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * 读取控制台内容</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * &lt;/p&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">scanner</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> tip</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">Scanner</span><span style="color:#A6ACCD;"> scanner </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Scanner</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">in</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">StringBuilder</span><span style="color:#A6ACCD;"> help </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">StringBuilder</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    help</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">append</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">请输入</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> tip </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">：</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">help</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">scanner</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">hasNext</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> ipt </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> scanner</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">next</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">StringUtils</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isNotBlank</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ipt</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> ipt</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">MybatisPlusException</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">请输入正确的</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> tip </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">！</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * &lt;p&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 读取控制台内容</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * &lt;/p&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">static</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">scanner</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> tip) {</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#E5C07B;">Scanner</span><span style="color:#E06C75;"> scanner </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">Scanner</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">in</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#E5C07B;">StringBuilder</span><span style="color:#E06C75;"> help </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">StringBuilder</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#E5C07B;">help</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">append</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;请输入&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> tip </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;：&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">help</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toString</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">if</span><span style="color:#E06C75;"> (</span><span style="color:#E5C07B;">scanner</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">hasNext</span><span style="color:#ABB2BF;">()</span><span style="color:#E06C75;">) {</span></span>
<span class="line"><span style="color:#E06C75;">        </span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> ipt </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">scanner</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">next</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E06C75;">        </span><span style="color:#C678DD;">if</span><span style="color:#E06C75;"> (</span><span style="color:#E5C07B;">StringUtils</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">isNotBlank</span><span style="color:#ABB2BF;">(ipt)</span><span style="color:#E06C75;">) {</span></span>
<span class="line"><span style="color:#E06C75;">            </span><span style="color:#C678DD;">return</span><span style="color:#E06C75;"> ipt</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">        }</span></span>
<span class="line"><span style="color:#E06C75;">    }</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">throw</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">MybatisPlusException</span><span style="color:#E06C75;">(</span><span style="color:#98C379;">&quot;请输入正确的&quot;</span><span style="color:#E06C75;"> </span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;"> tip </span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&quot;！&quot;</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"></span></code></pre></div><p>测试一下效果吧。</p><p><img src="`+m+`" alt="202102241311800"></p><div class="tip custom-block"><p class="custom-block-title">笔者说</p><p>在策略配置中还可以通过 <code>setSuperXXClass(Class)</code> 系列方法对 Enity、Service、Controller 等设置自定义父类，这样生成的代码就直接会继承好指定类了。例如：<code>setSuperEntityClass()</code> 方法可以指定好 Entity 的父类，这样审计类信息就不用每个实体类里都来一份了，做数据填充设置也会更加方便。</p></div><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-hidden="true">#</a></h2><p>[1]MyBatis Plus 代码生成器：<a href="https://baomidou.com/guide/generator.html" target="_blank" rel="noreferrer">https://baomidou.com/guide/generator.html</a></p><h2 id="后记" tabindex="-1">后记 <a class="header-anchor" href="#后记" aria-hidden="true">#</a></h2><p><strong>C：</strong> 最后在下方附上本篇的完整代码生成器配置代码，更多的配置你可以去看看 MP 官网代码生成器部分。其实所有的代码生成器都是那套思路，即模板 + 数据 + 模板引擎。后面抽时间，笔者也专门写一篇来介绍下常见的代码生成器实现思路，这样你也可以 “取悦” 一下你自己。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 演示例子，执行 main 方法控制台输入模块表名回车自动生成对应项目目录中</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">CodeGenerator</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     * 读取控制台内容</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     */</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">scanner</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">tip</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">Scanner</span><span style="color:#A6ACCD;"> scanner </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Scanner</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">in</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">StringBuilder</span><span style="color:#A6ACCD;"> help </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">StringBuilder</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        help</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">append</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">请输入</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> tip </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">：</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">help</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">scanner</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">hasNext</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> ipt </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> scanner</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">next</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">StringUtils</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isNotBlank</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ipt</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> ipt</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">MybatisPlusException</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">请输入正确的</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> tip </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">！</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 1.初始化代码生成器</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 创建代码生成器对象</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">AutoGenerator</span><span style="color:#A6ACCD;"> generator </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">AutoGenerator</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 指定模板引擎为FreeMarker，如果你使用默认的引擎velocity则无需此配置</span></span>
<span class="line"><span style="color:#A6ACCD;">        generator</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setTemplateEngine</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">FreemarkerTemplateEngine</span><span style="color:#89DDFF;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 2.指定全局配置</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 创建全局配置对象</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">GlobalConfig</span><span style="color:#A6ACCD;"> globalConfig </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GlobalConfig</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 指定生成文件的输出目录【默认 D 盘根目录】</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// System.getProperty(&quot;user.dir&quot;) 获取到的是当前项目的绝对路径</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 输出目录示例：D:\\IdeaProjects\\mybatis-plus-demo\\src\\main\\java</span></span>
<span class="line"><span style="color:#A6ACCD;">        globalConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setOutputDir</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getProperty</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">user.dir</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/src/main/java</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 指定开发人员</span></span>
<span class="line"><span style="color:#A6ACCD;">        globalConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setAuthor</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Charles7c</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 指定是否打开输出目录</span></span>
<span class="line"><span style="color:#A6ACCD;">        globalConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setOpen</span><span style="color:#89DDFF;">(false);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 指定全局配置</span></span>
<span class="line"><span style="color:#A6ACCD;">        generator</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setGlobalConfig</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">globalConfig</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 3.指定包名配置</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 创建包配置对象</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">PackageConfig</span><span style="color:#A6ACCD;"> packageConfig </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">PackageConfig</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 指定父包名</span></span>
<span class="line"><span style="color:#A6ACCD;">        packageConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setParent</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">com.example</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 指定父包下模块名，例如：用户模块user、角色模块role...</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 如果拆分输入模块，则每个模块有自己的全套controller、service、dao...</span></span>
<span class="line"><span style="color:#A6ACCD;">        packageConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setModuleName</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">scanner</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">模块名</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 指定包名配置</span></span>
<span class="line"><span style="color:#A6ACCD;">        generator</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setPackageInfo</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">packageConfig</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 4.指定数据源配置</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 创建数据源配置对象</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">DataSourceConfig</span><span style="color:#A6ACCD;"> dataSourceConfig </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">DataSourceConfig</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 指定数据源信息</span></span>
<span class="line"><span style="color:#A6ACCD;">        dataSourceConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setUrl</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">jdbc:mysql://localhost:3306/mybatisplus_demodb?serverTimezone=Asia/Shanghai&amp;useUnicode=true&amp;useSSL=false&amp;characterEncoding=utf8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        dataSourceConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setDriverName</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">com.mysql.cj.jdbc.Driver</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        dataSourceConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setUsername</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">root</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        dataSourceConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setPassword</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">root</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 指定数据源配置</span></span>
<span class="line"><span style="color:#A6ACCD;">        generator</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setDataSource</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">dataSourceConfig</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 5.指定策略配置</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 创建策略配置对象</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">StrategyConfig</span><span style="color:#A6ACCD;"> strategyConfig </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">StrategyConfig</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 指定数据库表映射到实体的命名策略</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 下划线转驼峰命名：underline_to_camel</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 不做任何改变，原样输出：no_change</span></span>
<span class="line"><span style="color:#A6ACCD;">        strategyConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setNaming</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">NamingStrategy</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">underline_to_camel</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 指定数据库表字段映射到实体的命名策略</span></span>
<span class="line"><span style="color:#A6ACCD;">        strategyConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setColumnNaming</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">NamingStrategy</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">underline_to_camel</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 指定实体类是否采用 lombok 注解</span></span>
<span class="line"><span style="color:#A6ACCD;">        strategyConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setEntityLombokModel</span><span style="color:#89DDFF;">(true);</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 指定生成的Controller类是否采用@RestController注解</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 默认false：@Controller -&gt; true：@RestController</span></span>
<span class="line"><span style="color:#A6ACCD;">        strategyConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setRestControllerStyle</span><span style="color:#89DDFF;">(true);</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 指定需要包含的表名，允许正则表达式（与exclude二选一配置）</span></span>
<span class="line"><span style="color:#A6ACCD;">        strategyConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setInclude</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">scanner</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">表名，多个英文逗号分割</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">split</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 指定要去除的表前缀</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 如果表是按模块划分，例如：系统模块的用户表是 sys_user，那么要去除的表前缀就是 sys_</span></span>
<span class="line"><span style="color:#A6ACCD;">        strategyConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setTablePrefix</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">packageConfig</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getModuleName</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">_</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 指定策略配置</span></span>
<span class="line"><span style="color:#A6ACCD;">        generator</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setStrategy</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">strategyConfig</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 执行生成</span></span>
<span class="line"><span style="color:#A6ACCD;">        generator</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">execute</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 演示例子，执行 main 方法控制台输入模块表名回车自动生成对应项目目录中</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">CodeGenerator</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     * 读取控制台内容</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     */</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">static</span><span style="color:#61AFEF;"> </span><span style="color:#E5C07B;">String</span><span style="color:#61AFEF;"> scanner</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">tip</span><span style="color:#ABB2BF;">)</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">Scanner</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">scanner</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Scanner</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">in</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">StringBuilder</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">help</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">StringBuilder</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">help</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">append</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;请输入&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> tip </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;：&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">help</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toString</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">scanner</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">hasNext</span><span style="color:#ABB2BF;">()) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">ipt</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">scanner</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">next</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">StringUtils</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">isNotBlank</span><span style="color:#ABB2BF;">(ipt)) {</span></span>
<span class="line"><span style="color:#ABB2BF;">                </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> ipt;</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">throw</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">MybatisPlusException</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;请输入正确的&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> tip </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;！&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">static</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">)</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 1.初始化代码生成器</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 创建代码生成器对象</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">AutoGenerator</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">generator</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">AutoGenerator</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 指定模板引擎为FreeMarker，如果你使用默认的引擎velocity则无需此配置</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">generator</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setTemplateEngine</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">FreemarkerTemplateEngine</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 2.指定全局配置</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 创建全局配置对象</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">GlobalConfig</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">globalConfig</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">GlobalConfig</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 指定生成文件的输出目录【默认 D 盘根目录】</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// System.getProperty(&quot;user.dir&quot;) 获取到的是当前项目的绝对路径</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 输出目录示例：D:\\IdeaProjects\\mybatis-plus-demo\\src\\main\\java</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">globalConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setOutputDir</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getProperty</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;user.dir&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;/src/main/java&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 指定开发人员</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">globalConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setAuthor</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Charles7c&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 指定是否打开输出目录</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">globalConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setOpen</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 指定全局配置</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">generator</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setGlobalConfig</span><span style="color:#ABB2BF;">(globalConfig);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 3.指定包名配置</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 创建包配置对象</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">PackageConfig</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">packageConfig</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">PackageConfig</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 指定父包名</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">packageConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setParent</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;com.example&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 指定父包下模块名，例如：用户模块user、角色模块role...</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 如果拆分输入模块，则每个模块有自己的全套controller、service、dao...</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">packageConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setModuleName</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">scanner</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;模块名&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 指定包名配置</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">generator</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setPackageInfo</span><span style="color:#ABB2BF;">(packageConfig);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 4.指定数据源配置</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 创建数据源配置对象</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">DataSourceConfig</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">dataSourceConfig</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">DataSourceConfig</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 指定数据源信息</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">dataSourceConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setUrl</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;jdbc:mysql://localhost:3306/mybatisplus_demodb?serverTimezone=Asia/Shanghai&amp;useUnicode=true&amp;useSSL=false&amp;characterEncoding=utf8&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">dataSourceConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setDriverName</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;com.mysql.cj.jdbc.Driver&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">dataSourceConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setUsername</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">dataSourceConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setPassword</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 指定数据源配置</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">generator</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setDataSource</span><span style="color:#ABB2BF;">(dataSourceConfig);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 5.指定策略配置</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 创建策略配置对象</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">StrategyConfig</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">strategyConfig</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">StrategyConfig</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 指定数据库表映射到实体的命名策略</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 下划线转驼峰命名：underline_to_camel</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 不做任何改变，原样输出：no_change</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">strategyConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setNaming</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">NamingStrategy</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">underline_to_camel</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 指定数据库表字段映射到实体的命名策略</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">strategyConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setColumnNaming</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">NamingStrategy</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">underline_to_camel</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 指定实体类是否采用 lombok 注解</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">strategyConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setEntityLombokModel</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 指定生成的Controller类是否采用@RestController注解</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 默认false：@Controller -&gt; true：@RestController</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">strategyConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setRestControllerStyle</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 指定需要包含的表名，允许正则表达式（与exclude二选一配置）</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">strategyConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setInclude</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">scanner</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;表名，多个英文逗号分割&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">split</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;,&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 指定要去除的表前缀</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 如果表是按模块划分，例如：系统模块的用户表是 sys_user，那么要去除的表前缀就是 sys_</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">strategyConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setTablePrefix</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">packageConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getModuleName</span><span style="color:#ABB2BF;">() </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;_&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 指定策略配置</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">generator</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setStrategy</span><span style="color:#ABB2BF;">(strategyConfig);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 执行生成</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">generator</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">execute</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">笔者说</p><p>对于技术的学习，笔者一贯遵循的步骤是：先用最最简单的 demo 让它跑起来，然后学学它的最最常用 API 和 配置让自己能用起来，最后熟练使用的基础上，在空闲时尝试阅读它的源码让自己能够洞彻它的运行机制，部分问题出现的原因，同时借鉴这些技术实现来提升自己的代码高度。</p><p>所以在笔者的文章中，前期基本都是小白文，仅仅穿插很少量的源码研究。当然等小白文更新多了，你们还依然喜欢，后期会不定时专门对部分技术的源码进行解析。</p></div>`,59);function q(s,k,v,_,P,x){const o=t,e=D("ClientOnly");return p(),r("div",null,[b,y(e,null,{default:F(()=>{var n,a;return[(((n=s.$frontmatter)==null?void 0:n.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(p(),A(o,{key:0,article:s.$frontmatter},null,8,["article"])):C("",!0)]}),_:1}),S])}const j=c(h,[["render",q]]);export{M as __pageData,j as default};
