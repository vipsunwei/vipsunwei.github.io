import{_ as s,c as a,o as n,e as l}from"./app.b3d33ece.js";const h=JSON.parse('{"title":"如何引用外部cdn资源","description":"","frontmatter":{"title":"如何引用外部cdn资源","date":"2018-01-01T00:00:00.000Z","author":"recoluan","tags":["vue","cdn"],"categories":["frontEnd"]},"headers":[{"level":2,"title":"引用","slug":"引用","link":"#引用","children":[]},{"level":2,"title":"修改","slug":"修改","link":"#修改","children":[]},{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[]}],"relativePath":"posts/2018/010101.md"}'),e={name:"posts/2018/010101.md"},t=l(`<blockquote><p>在使用 vue-cli 进行项目构建时,有时是需要引用外部 cdn 资源的,生产环境中可以直接在 index.html 的头部引用,但是编译时会报错,因为脚手架无法识别这个外部资源.下面以引用腾讯地图 api 为例,介绍如何正确引用外部 cdn 资源.</p></blockquote><h2 id="引用" tabindex="-1">引用 <a class="header-anchor" href="#引用" aria-hidden="true">#</a></h2><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://map.qq.com/api/js?v=2.exp&amp;key=yourkey</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="修改" tabindex="-1">修改 <a class="header-anchor" href="#修改" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 因为腾讯地图的api都放在qq变量下输出的,所以配置的value应该是&#39;qq&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">externals</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">qq</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">qq</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> qq </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">qq</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>说明:其实第一步的引入并不是唯一的办法,还可以通过 js 创建 script 的方式,我认为上面的方法是最简洁的.</p>`,8),p=[t];function o(c,r,i,D,d,y){return n(),a("div",null,p)}const u=s(e,[["render",o]]);export{h as __pageData,u as default};
